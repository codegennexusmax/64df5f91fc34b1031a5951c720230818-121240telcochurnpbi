[{"_id": "64df5f91fc34b1031a5951ca", "mode": "staged", "originalfile": "/FileStore/platform/extra/tempFile1692360590.csv", "in": [], "out": ["64df5f91fc34b1031a5951cb"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "TelcoChurn_PBI_HDFS", "comment": "", "pipeline_id": "64df5f91fc34b1031a5951c7", "sub_type": "HDFS", "stage_type": "source", "stage_attributes": {"url": "/FileStore/platform/extra/tempFile1692360590.csv", "filename": "tempFile1692360590.csv", "delimiter": ",", "file_type": "Delimeted", "dbfs_token": "", "dbfs_domain": "", "is_header": "Use Header Line", "server_url": "/numtraPlatform/NumtraPlatformV3/uploads/platform/"}, "status": "new", "position": {"x": -80, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/source/hdfs-source.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "source", "text": "HDFS", "slug": "hdfs", "fontFamily": "Roboto Condensed", "fontWeight": "Normal", "mode": "manual"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"url": "", "file_type": "", "dbfs_token": "", "dbfs_domain": "", "delimiter": "", "is_header": "Use Header Line"}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "15431221-f3af-496e-83cd-2ef74ecb4fcc", "original_schema": [{"inherited": true, "checked": true, "field": "CustomerChurn[customerID]", "alias": "CustomerChurn[customerID]", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "CustomerChurn[gender]", "alias": "CustomerChurn[gender]", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "CustomerChurn[SeniorCitizen]", "alias": "CustomerChurn[SeniorCitizen]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "CustomerChurn[Partner]", "alias": "CustomerChurn[Partner]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "CustomerChurn[Dependents]", "alias": "CustomerChurn[Dependents]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "CustomerChurn[tenure]", "alias": "CustomerChurn[tenure]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "CustomerChurn[PhoneService]", "alias": "CustomerChurn[PhoneService]", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "CustomerChurn[MultipleLines]", "alias": "CustomerChurn[MultipleLines]", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "CustomerChurn[InternetService]", "alias": "CustomerChurn[InternetService]", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineSecurity]", "alias": "CustomerChurn[OnlineSecurity]", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineBackup]", "alias": "CustomerChurn[OnlineBackup]", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "CustomerChurn[DeviceProtection]", "alias": "CustomerChurn[DeviceProtection]", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "CustomerChurn[TechSupport]", "alias": "CustomerChurn[TechSupport]", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingTV]", "alias": "CustomerChurn[StreamingTV]", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingMovies]", "alias": "CustomerChurn[StreamingMovies]", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "CustomerChurn[Contract]", "alias": "CustomerChurn[Contract]", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaperlessBilling]", "alias": "CustomerChurn[PaperlessBilling]", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaymentMethod]", "alias": "CustomerChurn[PaymentMethod]", "type": "String", "position": 17}, {"inherited": true, "checked": true, "field": "CustomerChurn[MonthlyCharges]", "alias": "CustomerChurn[MonthlyCharges]", "type": "real", "position": 18}, {"inherited": true, "checked": true, "field": "CustomerChurn[TotalCharges]", "alias": "CustomerChurn[TotalCharges]", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "CustomerChurn[Churn]", "alias": "CustomerChurn[Churn]", "type": "numeric", "position": 20}], "actual_schema": [{"inherited": true, "checked": true, "field": "CustomerChurn[customerID]", "alias": "CustomerChurn[customerID]", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "CustomerChurn[gender]", "alias": "CustomerChurn[gender]", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "CustomerChurn[SeniorCitizen]", "alias": "CustomerChurn[SeniorCitizen]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "CustomerChurn[Partner]", "alias": "CustomerChurn[Partner]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "CustomerChurn[Dependents]", "alias": "CustomerChurn[Dependents]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "CustomerChurn[tenure]", "alias": "CustomerChurn[tenure]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "CustomerChurn[PhoneService]", "alias": "CustomerChurn[PhoneService]", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "CustomerChurn[MultipleLines]", "alias": "CustomerChurn[MultipleLines]", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "CustomerChurn[InternetService]", "alias": "CustomerChurn[InternetService]", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineSecurity]", "alias": "CustomerChurn[OnlineSecurity]", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineBackup]", "alias": "CustomerChurn[OnlineBackup]", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "CustomerChurn[DeviceProtection]", "alias": "CustomerChurn[DeviceProtection]", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "CustomerChurn[TechSupport]", "alias": "CustomerChurn[TechSupport]", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingTV]", "alias": "CustomerChurn[StreamingTV]", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingMovies]", "alias": "CustomerChurn[StreamingMovies]", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "CustomerChurn[Contract]", "alias": "CustomerChurn[Contract]", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaperlessBilling]", "alias": "CustomerChurn[PaperlessBilling]", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaymentMethod]", "alias": "CustomerChurn[PaymentMethod]", "type": "String", "position": 17}, {"inherited": true, "checked": true, "field": "CustomerChurn[MonthlyCharges]", "alias": "CustomerChurn[MonthlyCharges]", "type": "real", "position": 18}, {"inherited": true, "checked": true, "field": "CustomerChurn[TotalCharges]", "alias": "CustomerChurn[TotalCharges]", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "CustomerChurn[Churn]", "alias": "CustomerChurn[Churn]", "type": "numeric", "position": 20}], "selected_schema": [], "created_at": "2023-08-18 12:09:53.042000", "joinSchema": [], "updated_at": "2023-08-18 12:09:53.138000", "__v": 0, "stage_runningstate": "executed", "datacache": 0, "originalcount": 7043, "sampleData": [{"CustomerChurn[customerID]": "0390-DCFDQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.45, "CustomerChurn[TotalCharges]": 70.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7206-GZCDC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.25, "CustomerChurn[TotalCharges]": 69.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5542-TBBWB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.9, "CustomerChurn[TotalCharges]": 69.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4510-HIMLV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.8, "CustomerChurn[TotalCharges]": 69.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7908-QCBCA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.4, "CustomerChurn[TotalCharges]": 69.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5032-MIYKT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.7, "CustomerChurn[TotalCharges]": 70.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2856-HYAPG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 68.65, "CustomerChurn[TotalCharges]": 68.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1062-LHZOD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.9, "CustomerChurn[TotalCharges]": 69.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1122-JWTJW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.65, "CustomerChurn[TotalCharges]": 70.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6582-OIVSP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.3, "CustomerChurn[TotalCharges]": 45.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9244-ZVAPM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.6, "CustomerChurn[TotalCharges]": 45.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2833-SLKDQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.05, "CustomerChurn[TotalCharges]": 45.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6650-VJONK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 43.85, "CustomerChurn[TotalCharges]": 43.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1612-EOHDH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.15, "CustomerChurn[TotalCharges]": 45.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0415-MOSGF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.4, "CustomerChurn[TotalCharges]": 44.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7593-XFKDI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 46.3, "CustomerChurn[TotalCharges]": 46.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7663-RGWBC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.15, "CustomerChurn[TotalCharges]": 44.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8710-YGLWG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.9, "CustomerChurn[TotalCharges]": 44.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1976-CFOCS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 46.0, "CustomerChurn[TotalCharges]": 46.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1024-GUALD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.8, "CustomerChurn[TotalCharges]": 24.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6358-LYNGM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.9, "CustomerChurn[TotalCharges]": 74.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0248-IPDFW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.1, "CustomerChurn[TotalCharges]": 50.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2740-TVLFN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.15, "CustomerChurn[TotalCharges]": 50.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2209-XADXF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.25, "CustomerChurn[TotalCharges]": 25.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0612-RTZZA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.25, "CustomerChurn[TotalCharges]": 25.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4729-XKASR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.75, "CustomerChurn[TotalCharges]": 24.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8473-VUVJN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.65, "CustomerChurn[TotalCharges]": 73.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5351-QESIO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.2, "CustomerChurn[TotalCharges]": 24.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3049-NDXFL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 85.8, "CustomerChurn[TotalCharges]": 85.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0970-ETWGE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.55, "CustomerChurn[TotalCharges]": 89.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7274-RTAPZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.55, "CustomerChurn[TotalCharges]": 90.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5960-WPXQM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.05, "CustomerChurn[TotalCharges]": 79.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4912-PIGUY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.6, "CustomerChurn[TotalCharges]": 84.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0295-PPHDO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.45, "CustomerChurn[TotalCharges]": 95.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7595-EUIVN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.8, "CustomerChurn[TotalCharges]": 75.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1866-OBPNR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 74.6, "CustomerChurn[TotalCharges]": 74.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3178-FESZO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 100.25, "CustomerChurn[TotalCharges]": 100.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3765-JXVKY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.7, "CustomerChurn[TotalCharges]": 74.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1628-BIZYP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 85.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1862-SKORY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 39.3, "CustomerChurn[TotalCharges]": 1637.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9633-DENPU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 47, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 58.6, "CustomerChurn[TotalCharges]": 2723.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5424-RLQLC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 59.65, "CustomerChurn[TotalCharges]": 638.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4827-USJHP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 51.8, "CustomerChurn[TotalCharges]": 1023.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1251-KRREG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 54.4, "CustomerChurn[TotalCharges]": 114.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4130-MZLCC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 50.55, "CustomerChurn[TotalCharges]": 244.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9342-VNIMQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 54.65, "CustomerChurn[TotalCharges]": 1665.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8919-FYFQZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 44, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 30.35, "CustomerChurn[TotalCharges]": 1359.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7389-KBFIT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 30.25, "CustomerChurn[TotalCharges]": 63.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5402-HTOTQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.3, "CustomerChurn[TotalCharges]": 875.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0975-VOOVL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 29.2, "CustomerChurn[TotalCharges]": 98.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9947-OTFQU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.4, "CustomerChurn[TotalCharges]": 1074.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3488-PGMQJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.5, "CustomerChurn[TotalCharges]": 606.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4143-HHPMK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.35, "CustomerChurn[TotalCharges]": 4338.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2135-DQWAQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 85.3, "CustomerChurn[TotalCharges]": 420.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7005-CCBKV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.4, "CustomerChurn[TotalCharges]": 556.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1472-TNCWL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 36, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.7, "CustomerChurn[TotalCharges]": 3512.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4884-ZTHVF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 87.1, "CustomerChurn[TotalCharges]": 713.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8413-VONUO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.65, "CustomerChurn[TotalCharges]": 167.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9614-RMGHA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 91.85, "CustomerChurn[TotalCharges]": 5940.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4828-FAZPK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 79.95, "CustomerChurn[TotalCharges]": 1267.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8988-ECPJR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 79.6, "CustomerChurn[TotalCharges]": 2718.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7074-IEVOJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.4, "CustomerChurn[TotalCharges]": 205.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5692-ICXLW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.7, "CustomerChurn[TotalCharges]": 2845.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6298-QDFNH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.35, "CustomerChurn[TotalCharges]": 1730.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1013-QCWAM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.8, "CustomerChurn[TotalCharges]": 6690.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1569-TTNYJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.75, "CustomerChurn[TotalCharges]": 412.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4951-UKAAQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 88.95, "CustomerChurn[TotalCharges]": 355.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9773-PEQBZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.85, "CustomerChurn[TotalCharges]": 797.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8374-XGEJJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.0, "CustomerChurn[TotalCharges]": 4388.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4228-ZGYUW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.05, "CustomerChurn[TotalCharges]": 368.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6892-EZDTG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 91.65, "CustomerChurn[TotalCharges]": 365.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0702-PGIBZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.7, "CustomerChurn[TotalCharges]": 364.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3621-CEOVK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.2, "CustomerChurn[TotalCharges]": 1369.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3016-KSVCP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 33.75, "CustomerChurn[TotalCharges]": 1009.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8160-HOWOX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 66.85, "CustomerChurn[TotalCharges]": 458.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2894-QOJRX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 34.0, "CustomerChurn[TotalCharges]": 853.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4640-UHDOS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.95, "CustomerChurn[TotalCharges]": 734.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0003-MKNFE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 59.9, "CustomerChurn[TotalCharges]": 542.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8903-XEBGX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.3, "CustomerChurn[TotalCharges]": 108.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9396-ZSFLL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 48.85, "CustomerChurn[TotalCharges]": 631.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1958-RNRKS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.9, "CustomerChurn[TotalCharges]": 1441.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5155-AZQPB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.9, "CustomerChurn[TotalCharges]": 1410.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7802-EFKNY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.95, "CustomerChurn[TotalCharges]": 100.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4236-UJPWO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.5, "CustomerChurn[TotalCharges]": 46.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2235-ZGKPT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.85, "CustomerChurn[TotalCharges]": 239.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8614-VGMMV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.1, "CustomerChurn[TotalCharges]": 679.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1559-DTODC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.15, "CustomerChurn[TotalCharges]": 468.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5215-LNLDJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.7, "CustomerChurn[TotalCharges]": 149.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4815-GBTCD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.15, "CustomerChurn[TotalCharges]": 99.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4690-LLKUA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.05, "CustomerChurn[TotalCharges]": 770.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3258-SANFR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 44.7, "CustomerChurn[TotalCharges]": 276.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3808-HFKDE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.35, "CustomerChurn[TotalCharges]": 927.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7521-AFHAB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.8, "CustomerChurn[TotalCharges]": 220.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4566-QVRRW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.05, "CustomerChurn[TotalCharges]": 483.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1501-SGHBW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.85, "CustomerChurn[TotalCharges]": 81.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1919-RTPQD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.75, "CustomerChurn[TotalCharges]": 333.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2842-JTCCU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 46.05, "CustomerChurn[TotalCharges]": 80.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0913-XWSCN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 85.5, "CustomerChurn[TotalCharges]": 4713.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3198-VELRD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 84.75, "CustomerChurn[TotalCharges]": 264.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3096-IZETN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 78.1, "CustomerChurn[TotalCharges]": 947.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7395-IGJOS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 81.5, "CustomerChurn[TotalCharges]": 1329.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2114-MGINA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 89.8, "CustomerChurn[TotalCharges]": 1129.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5380-AFSSK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 93.9, "CustomerChurn[TotalCharges]": 486.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9279-CJEOJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 95.4, "CustomerChurn[TotalCharges]": 2025.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9846-GKXAS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 90.8, "CustomerChurn[TotalCharges]": 809.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1845-CSBRZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 85.35, "CustomerChurn[TotalCharges]": 1961.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3194-ORPIK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 50, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 84.4, "CustomerChurn[TotalCharges]": 4116.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3855-ONCAR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 78.9, "CustomerChurn[TotalCharges]": 299.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8329-GWVPJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 50, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.75, "CustomerChurn[TotalCharges]": 3557.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0196-JTUQI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 75.2, "CustomerChurn[TotalCharges]": 633.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5931-FLJJF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.1, "CustomerChurn[TotalCharges]": 467.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5908-QMGOE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 74.2, "CustomerChurn[TotalCharges]": 1133.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6221-AVQYL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 73.25, "CustomerChurn[TotalCharges]": 131.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0599-XNYDO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.8, "CustomerChurn[TotalCharges]": 1540.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9800-ONTFE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.8, "CustomerChurn[TotalCharges]": 1615.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8993-IZEUX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.15, "CustomerChurn[TotalCharges]": 488.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8873-GLDMH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 73.85, "CustomerChurn[TotalCharges]": 401.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2079-FBMZK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.25, "CustomerChurn[TotalCharges]": 418.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9767-FFLEM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 38, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 69.5, "CustomerChurn[TotalCharges]": 2625.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4115-NZRKS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.15, "CustomerChurn[TotalCharges]": 574.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6311-UEUME", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.9, "CustomerChurn[TotalCharges]": 2384.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7198-GLXTC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 143.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3753-TSEMP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 88.15, "CustomerChurn[TotalCharges]": 1390.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4529-CKBCL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.2, "CustomerChurn[TotalCharges]": 146.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7928-VJYAB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.6, "CustomerChurn[TotalCharges]": 1020.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0187-QSXOE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.0, "CustomerChurn[TotalCharges]": 605.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6110-OHIHY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.25, "CustomerChurn[TotalCharges]": 267.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6331-EWIEB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.25, "CustomerChurn[TotalCharges]": 1734.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3951-NJCVI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 42, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.05, "CustomerChurn[TotalCharges]": 3944.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7851-WZEKY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.15, "CustomerChurn[TotalCharges]": 196.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7943-RQCHR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.75, "CustomerChurn[TotalCharges]": 889.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4094-NSEDU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.25, "CustomerChurn[TotalCharges]": 1973.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8245-UMPYT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 96.4, "CustomerChurn[TotalCharges]": 1581.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5150-ITWWB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.85, "CustomerChurn[TotalCharges]": 335.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3318-OSATS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.45, "CustomerChurn[TotalCharges]": 3474.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7526-BEZQB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 96.05, "CustomerChurn[TotalCharges]": 1148.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2824-MYYBN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.25, "CustomerChurn[TotalCharges]": 3314.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3714-NTNFO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.5, "CustomerChurn[TotalCharges]": 3906.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9606-PBKBQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 32, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 2642.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7892-QVYKW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.6, "CustomerChurn[TotalCharges]": 1868.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9779-DPNEJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.15, "CustomerChurn[TotalCharges]": 1790.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1143-NMNQJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.7, "CustomerChurn[TotalCharges]": 169.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6961-VCPMC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.4, "CustomerChurn[TotalCharges]": 3605.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8972-HJWNV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.55, "CustomerChurn[TotalCharges]": 646.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7858-GTZSP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.55, "CustomerChurn[TotalCharges]": 1066.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5228-EXCET", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.85, "CustomerChurn[TotalCharges]": 1008.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2642-DTVCO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.05, "CustomerChurn[TotalCharges]": 746.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9355-NPPFS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.8, "CustomerChurn[TotalCharges]": 2006.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9185-TQCVP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.15, "CustomerChurn[TotalCharges]": 1139.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1226-IENZN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.75, "CustomerChurn[TotalCharges]": 1218.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0928-XUTSN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.5, "CustomerChurn[TotalCharges]": 1011.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4846-WHAFZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.5, "CustomerChurn[TotalCharges]": 2868.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5956-VKDTT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.35, "CustomerChurn[TotalCharges]": 334.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1618-CFHME", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.9, "CustomerChurn[TotalCharges]": 143.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3030-YDNRM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.85, "CustomerChurn[TotalCharges]": 572.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3858-VOBET", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.95, "CustomerChurn[TotalCharges]": 1710.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7801-KICAO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.15, "CustomerChurn[TotalCharges]": 1345.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3199-XGZCY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.25, "CustomerChurn[TotalCharges]": 576.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7625-XCQRH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.5, "CustomerChurn[TotalCharges]": 837.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8541-QVFKM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.5, "CustomerChurn[TotalCharges]": 632.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4629-NRXKX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.4, "CustomerChurn[TotalCharges]": 147.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0455-XFASS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.55, "CustomerChurn[TotalCharges]": 200.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6017-PPLPX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.45, "CustomerChurn[TotalCharges]": 1470.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4919-MOAVT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.65, "CustomerChurn[TotalCharges]": 220.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4482-EWFMI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.7, "CustomerChurn[TotalCharges]": 135.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2482-CZGBB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 740.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0018-NYROU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 68.95, "CustomerChurn[TotalCharges]": 351.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3398-ZOUAA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.1, "CustomerChurn[TotalCharges]": 1474.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1010-DIAUQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 96.5, "CustomerChurn[TotalCharges]": 492.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0927-LCSMG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 74.65, "CustomerChurn[TotalCharges]": 544.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3916-NRPAP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 85.7, "CustomerChurn[TotalCharges]": 256.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7861-UVUFT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.3, "CustomerChurn[TotalCharges]": 1308.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1092-GANHU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.65, "CustomerChurn[TotalCharges]": 1313.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5159-YFPKQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.8, "CustomerChurn[TotalCharges]": 160.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2195-ZRVAX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 47, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.3, "CustomerChurn[TotalCharges]": 4045.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9747-DDZOS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 73.5, "CustomerChurn[TotalCharges]": 73.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8617-ENBDS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 73.6, "CustomerChurn[TotalCharges]": 232.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3647-GMGDH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 94.7, "CustomerChurn[TotalCharges]": 1914.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0129-KPTWJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 72, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.65, "CustomerChurn[TotalCharges]": 6747.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0943-ZQPXH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 44, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 92.95, "CustomerChurn[TotalCharges]": 4122.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3644-QXEHN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 97.0, "CustomerChurn[TotalCharges]": 1334.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3629-ZNKXA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.8, "CustomerChurn[TotalCharges]": 1752.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5480-TBGPH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 99.3, "CustomerChurn[TotalCharges]": 2431.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2952-QAYZF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.3, "CustomerChurn[TotalCharges]": 424.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2070-XYMFH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 79.35, "CustomerChurn[TotalCharges]": 1835.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9776-OJUZI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 95.45, "CustomerChurn[TotalCharges]": 6223.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3771-PZOBW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 90.7, "CustomerChurn[TotalCharges]": 1781.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2454-RPBRZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.1, "CustomerChurn[TotalCharges]": 1060.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6080-TCMYC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 81.2, "CustomerChurn[TotalCharges]": 3292.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6137-NICCO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 94.05, "CustomerChurn[TotalCharges]": 518.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4098-NAUKP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.65, "CustomerChurn[TotalCharges]": 5683.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0495-ZBNGW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 79.9, "CustomerChurn[TotalCharges]": 343.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0378-NHQXU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 88.25, "CustomerChurn[TotalCharges]": 1460.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4695-WJZUE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 88.55, "CustomerChurn[TotalCharges]": 179.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5982-FPVQN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.15, "CustomerChurn[TotalCharges]": 3532.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1273-MTETI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 88.85, "CustomerChurn[TotalCharges]": 372.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6075-SLNIL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 38, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 95.1, "CustomerChurn[TotalCharges]": 3691.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5947-SGKCL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 105.35, "CustomerChurn[TotalCharges]": 1559.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6481-ESCNL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 100.55, "CustomerChurn[TotalCharges]": 2878.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8059-UDZFY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 105.35, "CustomerChurn[TotalCharges]": 3465.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5299-SJCZT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 101.55, "CustomerChurn[TotalCharges]": 298.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2034-CGRHZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 102.95, "CustomerChurn[TotalCharges]": 2496.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0402-CQAJN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 101.9, "CustomerChurn[TotalCharges]": 3545.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5380-WJKOV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 106.35, "CustomerChurn[TotalCharges]": 3549.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8313-NDOIA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 104.15, "CustomerChurn[TotalCharges]": 2494.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7028-DVOIQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 99.05, "CustomerChurn[TotalCharges]": 3395.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1751-NCDLI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.85, "CustomerChurn[TotalCharges]": 4564.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4021-RQSNY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.5, "CustomerChurn[TotalCharges]": 3004.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0895-DQHEW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 54, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 104.3, "CustomerChurn[TotalCharges]": 5278.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4433-JCGCG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.0, "CustomerChurn[TotalCharges]": 4680.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8818-DOPVL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 104.45, "CustomerChurn[TotalCharges]": 4863.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9647-ERGBE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.05, "CustomerChurn[TotalCharges]": 3046.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4735-ASGMA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.35, "CustomerChurn[TotalCharges]": 2515.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7450-NWRTR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 99.45, "CustomerChurn[TotalCharges]": 1200.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4998-IKFSE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.45, "CustomerChurn[TotalCharges]": 3096.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2968-SSGAA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.6, "CustomerChurn[TotalCharges]": 1060.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3768-NLUBH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 57, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.6, "CustomerChurn[TotalCharges]": 5746.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2761-XECQW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 43.35, "CustomerChurn[TotalCharges]": 371.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1304-BCCFO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.05, "CustomerChurn[TotalCharges]": 564.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7595-EHCDL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 32, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 50.6, "CustomerChurn[TotalCharges]": 1653.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4945-RVMTE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 59.55, "CustomerChurn[TotalCharges]": 1646.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3995-WFCSM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 60.85, "CustomerChurn[TotalCharges]": 111.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2770-NSVDG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 29.1, "CustomerChurn[TotalCharges]": 688.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9026-RNUJS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.35, "CustomerChurn[TotalCharges]": 237.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9667-EQRXU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 40.3, "CustomerChurn[TotalCharges]": 1172.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6715-OFDBP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.05, "CustomerChurn[TotalCharges]": 346.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8280-MQRQN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.45, "CustomerChurn[TotalCharges]": 50.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8404-GFGCZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 65.6, "CustomerChurn[TotalCharges]": 250.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8878-RYUKI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 59.45, "CustomerChurn[TotalCharges]": 3043.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1208-NBVFH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.6, "CustomerChurn[TotalCharges]": 939.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8650-RHRKE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 29.65, "CustomerChurn[TotalCharges]": 118.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6876-ADESB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 48.95, "CustomerChurn[TotalCharges]": 48.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5091-HFAZW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 91.15, "CustomerChurn[TotalCharges]": 168.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8429-XIBUM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 101.35, "CustomerChurn[TotalCharges]": 2317.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3348-CFRNX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 92.35, "CustomerChurn[TotalCharges]": 2602.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0684-AOSIH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 95.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3466-RITXD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 92.4, "CustomerChurn[TotalCharges]": 2349.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5274-XHAKY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 41, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 94.3, "CustomerChurn[TotalCharges]": 3893.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3694-DELSO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 38.55, "CustomerChurn[TotalCharges]": 156.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3969-JQABI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 58, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 65.25, "CustomerChurn[TotalCharges]": 3791.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4931-TRZWN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.95, "CustomerChurn[TotalCharges]": 923.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0603-OLQDC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.85, "CustomerChurn[TotalCharges]": 837.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1530-ZTDOZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 40.65, "CustomerChurn[TotalCharges]": 2070.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0096-FCPUF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 64.5, "CustomerChurn[TotalCharges]": 1888.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3062-ICYZQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 93.8, "CustomerChurn[TotalCharges]": 4539.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1212-GLHMD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 86.05, "CustomerChurn[TotalCharges]": 244.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0541-FITGH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 62.15, "CustomerChurn[TotalCharges]": 113.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2921-XWDJH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 38, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 83.45, "CustomerChurn[TotalCharges]": 3147.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9780-FKVVF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 59.15, "CustomerChurn[TotalCharges]": 336.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8400-WZICQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.7, "CustomerChurn[TotalCharges]": 3131.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3656-TKRVZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.35, "CustomerChurn[TotalCharges]": 165.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3842-QTGDL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 80.75, "CustomerChurn[TotalCharges]": 1321.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0239-OXEXL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 84.25, "CustomerChurn[TotalCharges]": 3847.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7957-RYHQD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 79.2, "CustomerChurn[TotalCharges]": 3233.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7619-ODSGN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.75, "CustomerChurn[TotalCharges]": 1338.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3088-LHEFH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 929.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2669-QVCRG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 41, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 81.3, "CustomerChurn[TotalCharges]": 3190.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7853-OETYL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 29.05, "CustomerChurn[TotalCharges]": 129.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6497-TILVL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.7, "CustomerChurn[TotalCharges]": 350.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0388-EOPEX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.4, "CustomerChurn[TotalCharges]": 139.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0257-ZESQC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.2, "CustomerChurn[TotalCharges]": 1929.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9537-VHDTA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 51.2, "CustomerChurn[TotalCharges]": 51.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6360-SVNWV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 73.55, "CustomerChurn[TotalCharges]": 2094.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0187-WZNAB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 74.4, "CustomerChurn[TotalCharges]": 1972.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9552-TGUZV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 658.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8885-QSQBX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 49.55, "CustomerChurn[TotalCharges]": 49.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7312-XSBAT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.75, "CustomerChurn[TotalCharges]": 49.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4072-IPYLT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 36, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 51.05, "CustomerChurn[TotalCharges]": 1815.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9644-UMGQA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.15, "CustomerChurn[TotalCharges]": 295.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7520-HQWJU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 67.45, "CustomerChurn[TotalCharges]": 4508.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8111-BKVDS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 40.7, "CustomerChurn[TotalCharges]": 449.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8963-JLGJT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.9, "CustomerChurn[TotalCharges]": 157.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5236-XMZJY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 42, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 59.65, "CustomerChurn[TotalCharges]": 2536.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3703-TTEPD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 65.35, "CustomerChurn[TotalCharges]": 1424.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1697-NVVGY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 66.4, "CustomerChurn[TotalCharges]": 1286.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8221-EQDGL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 61.0, "CustomerChurn[TotalCharges]": 2130.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0215-BQKGS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 84.3, "CustomerChurn[TotalCharges]": 2438.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3419-SNJJD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 105.25, "CustomerChurn[TotalCharges]": 6786.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4248-QPAVC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 85.35, "CustomerChurn[TotalCharges]": 1463.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8868-GAGIO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 45, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 84.55, "CustomerChurn[TotalCharges]": 3713.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9170-CCKOU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 90.2, "CustomerChurn[TotalCharges]": 1454.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2455-USLMV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 84.75, "CustomerChurn[TotalCharges]": 2613.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7537-CBQUZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 109.4, "CustomerChurn[TotalCharges]": 7031.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0886-QGENL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.25, "CustomerChurn[TotalCharges]": 2754.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2519-ERQOJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.6, "CustomerChurn[TotalCharges]": 1803.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2782-JEEBU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 36.0, "CustomerChurn[TotalCharges]": 780.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0953-LGOVU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 35.5, "CustomerChurn[TotalCharges]": 432.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5311-IHLEI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 50.95, "CustomerChurn[TotalCharges]": 605.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1142-WACZW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 29.85, "CustomerChurn[TotalCharges]": 75.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5154-VEKBL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 58.5, "CustomerChurn[TotalCharges]": 539.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7734-DBOAI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 40.1, "CustomerChurn[TotalCharges]": 40.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9708-HPXWZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 45.4, "CustomerChurn[TotalCharges]": 214.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8350-NYMVI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 39, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 41.1, "CustomerChurn[TotalCharges]": 1597.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7395-XWZOY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 1165.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6211-WHMYA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 64, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 43.85, "CustomerChurn[TotalCharges]": 2751.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9774-NRNAU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 84.8, "CustomerChurn[TotalCharges]": 2309.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2155-AMQRX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 54.9, "CustomerChurn[TotalCharges]": 1505.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7459-IMVYU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 38, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.95, "CustomerChurn[TotalCharges]": 2657.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1492-QGCLU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 53, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.7, "CustomerChurn[TotalCharges]": 4616.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8548-AWOFC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 63.85, "CustomerChurn[TotalCharges]": 4264.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1810-MVMAI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 67.6, "CustomerChurn[TotalCharges]": 2000.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4489-SNOJF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 72.25, "CustomerChurn[TotalCharges]": 2568.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0228-MAUWC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 59.55, "CustomerChurn[TotalCharges]": 1144.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1541-ETJZO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 62.05, "CustomerChurn[TotalCharges]": 62.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0584-BJQGZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 78.35, "CustomerChurn[TotalCharges]": 1837.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5448-VWNAM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 75.9, "CustomerChurn[TotalCharges]": 1375.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4710-NKCAW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 64.4, "CustomerChurn[TotalCharges]": 316.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5898-IGSLP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.3, "CustomerChurn[TotalCharges]": 2823.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6234-PFPXL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 95.9, "CustomerChurn[TotalCharges]": 2234.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5325-UWTWJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 90.55, "CustomerChurn[TotalCharges]": 2929.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4724-WXVWF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 48, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.4, "CustomerChurn[TotalCharges]": 4445.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9445-ZUEQE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 85.2, "CustomerChurn[TotalCharges]": 2151.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0564-MUUQK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 95.5, "CustomerChurn[TotalCharges]": 1916.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5846-QFDFI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 88.6, "CustomerChurn[TotalCharges]": 2888.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2640-PMGFL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.5, "CustomerChurn[TotalCharges]": 2180.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3853-LYGAM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 95.65, "CustomerChurn[TotalCharges]": 1640.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1485-YDHMM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 93.25, "CustomerChurn[TotalCharges]": 4631.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2873-ZLIWT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.85, "CustomerChurn[TotalCharges]": 3303.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9500-LTVBP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 80.05, "CustomerChurn[TotalCharges]": 2835.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6745-JEFZB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 91.5, "CustomerChurn[TotalCharges]": 3236.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9508-ILZDG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 96.35, "CustomerChurn[TotalCharges]": 3190.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7892-POOKP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 104.8, "CustomerChurn[TotalCharges]": 3046.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5099-BAILX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 110.75, "CustomerChurn[TotalCharges]": 4687.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1450-GALXR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.5, "CustomerChurn[TotalCharges]": 1058.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0115-TFERT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 111.2, "CustomerChurn[TotalCharges]": 2317.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9168-INPSZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 44, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 104.15, "CustomerChurn[TotalCharges]": 4495.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1028-FFNJK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.5, "CustomerChurn[TotalCharges]": 2917.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5816-QVHRX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 100.3, "CustomerChurn[TotalCharges]": 3541.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4830-FAXFM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 24.1, "CustomerChurn[TotalCharges]": 439.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2565-JSLRY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.05, "CustomerChurn[TotalCharges]": 24.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9027-YFHQJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.05, "CustomerChurn[TotalCharges]": 152.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4430-YHXGG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.45, "CustomerChurn[TotalCharges]": 84.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5760-WRAHC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.75, "CustomerChurn[TotalCharges]": 1545.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7989-VCQOH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 83.25, "CustomerChurn[TotalCharges]": 1611.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1356-MKYSK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 78.65, "CustomerChurn[TotalCharges]": 483.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9137-UIYPG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 106.9, "CustomerChurn[TotalCharges]": 3756.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4134-BSXLX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 60.9, "CustomerChurn[TotalCharges]": 1785.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9714-EDSUC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 94.9, "CustomerChurn[TotalCharges]": 360.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1036-GUDCL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 79.05, "CustomerChurn[TotalCharges]": 4663.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5173-WXOQV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 64.2, "CustomerChurn[TotalCharges]": 143.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1074-AMIOH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 53, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 108.25, "CustomerChurn[TotalCharges]": 5935.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6214-EDAKZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.15, "CustomerChurn[TotalCharges]": 1206.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4183-WCSEP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.45, "CustomerChurn[TotalCharges]": 2435.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2227-JRSJX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 99.15, "CustomerChurn[TotalCharges]": 1956.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1346-PJWTK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 61, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 94.15, "CustomerChurn[TotalCharges]": 5731.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2344-JMOGN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 94.85, "CustomerChurn[TotalCharges]": 890.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7929-DMBCV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 81.0, "CustomerChurn[TotalCharges]": 1683.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6475-VHUIZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.25, "CustomerChurn[TotalCharges]": 1221.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6818-DJXAA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 91.1, "CustomerChurn[TotalCharges]": 964.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7036-ZZKBD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 66.4, "CustomerChurn[TotalCharges]": 2019.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8292-TYSPY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 1046.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6711-VTNRE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 36, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 87.55, "CustomerChurn[TotalCharges]": 3078.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3003-CMDUU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.15, "CustomerChurn[TotalCharges]": 2395.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0013-MHZWF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 69.4, "CustomerChurn[TotalCharges]": 571.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3221-CJMSG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 51.1, "CustomerChurn[TotalCharges]": 1269.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5780-INQIK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.4, "CustomerChurn[TotalCharges]": 408.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4429-WYGFR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 49.15, "CustomerChurn[TotalCharges]": 1237.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8679-JOEVF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 59.4, "CustomerChurn[TotalCharges]": 1023.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5949-EBSQK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 61.45, "CustomerChurn[TotalCharges]": 229.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3144-AUDBS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.15, "CustomerChurn[TotalCharges]": 270.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6034-YMTOB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 75.65, "CustomerChurn[TotalCharges]": 399.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2696-NARTR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.85, "CustomerChurn[TotalCharges]": 926.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7854-EKTJL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 19.6, "CustomerChurn[TotalCharges]": 35.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7531-GQHME", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.05, "CustomerChurn[TotalCharges]": 265.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0114-RSRRW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 19.95, "CustomerChurn[TotalCharges]": 187.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7266-GSSJX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 20.45, "CustomerChurn[TotalCharges]": 250.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0463-WZZKO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.75, "CustomerChurn[TotalCharges]": 67.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6648-INWPS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 20.15, "CustomerChurn[TotalCharges]": 341.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7874-ECPQJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 20.05, "CustomerChurn[TotalCharges]": 85.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0208-BPQEJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 19.4, "CustomerChurn[TotalCharges]": 198.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5260-UMPWX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.25, "CustomerChurn[TotalCharges]": 493.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3694-GLTJM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 19.65, "CustomerChurn[TotalCharges]": 92.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5712-VBOXD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.15, "CustomerChurn[TotalCharges]": 68.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8780-RSYYU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 19.2, "CustomerChurn[TotalCharges]": 532.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4020-KIUDI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 19.85, "CustomerChurn[TotalCharges]": 138.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2061-VVFST", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 19.5, "CustomerChurn[TotalCharges]": 805.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0516-QREYC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.3, "CustomerChurn[TotalCharges]": 459.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6942-LBFDP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.55, "CustomerChurn[TotalCharges]": 33.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8681-ICONS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.65, "CustomerChurn[TotalCharges]": 654.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1237-WIYYZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.55, "CustomerChurn[TotalCharges]": 389.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9867-NNXLC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.05, "CustomerChurn[TotalCharges]": 470.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0690-SRQID", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.65, "CustomerChurn[TotalCharges]": 67.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6131-IUNXN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.2, "CustomerChurn[TotalCharges]": 382.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5384-ZTTWP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.8, "CustomerChurn[TotalCharges]": 272.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5774-XZTQC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.45, "CustomerChurn[TotalCharges]": 150.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3156-QLHBO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.25, "CustomerChurn[TotalCharges]": 48.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6838-HVLXG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.3, "CustomerChurn[TotalCharges]": 246.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9467-ROOLM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.05, "CustomerChurn[TotalCharges]": 461.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6972-SNKKW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.0, "CustomerChurn[TotalCharges]": 109.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8410-BGQXN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.4, "CustomerChurn[TotalCharges]": 93.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4397-FRLTA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.15, "CustomerChurn[TotalCharges]": 84.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0816-TSPHQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.75, "CustomerChurn[TotalCharges]": 44.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4800-VHZKI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.9, "CustomerChurn[TotalCharges]": 19.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7989-CHGTL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.6, "CustomerChurn[TotalCharges]": 19.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7243-LCGGZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.9, "CustomerChurn[TotalCharges]": 20.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4897-QSUYC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.15, "CustomerChurn[TotalCharges]": 20.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9753-OYLBX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.5, "CustomerChurn[TotalCharges]": 20.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0670-KDOMA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.25, "CustomerChurn[TotalCharges]": 20.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9975-SKRNR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 18.9, "CustomerChurn[TotalCharges]": 18.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8073-IJDCM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.3, "CustomerChurn[TotalCharges]": 20.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2676-ISHSF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.3, "CustomerChurn[TotalCharges]": 20.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4760-XOHVN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.45, "CustomerChurn[TotalCharges]": 19.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3807-XHCJH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 20.0, "CustomerChurn[TotalCharges]": 20.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3577-AMVUX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.05, "CustomerChurn[TotalCharges]": 55.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1536-HBSWP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.9, "CustomerChurn[TotalCharges]": 49.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5440-FLBQG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 108.4, "CustomerChurn[TotalCharges]": 7318.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8631-NBHFZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 79.4, "CustomerChurn[TotalCharges]": 5154.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1725-IQNIY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 54, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 109.75, "CustomerChurn[TotalCharges]": 6110.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2533-QVMSK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 61, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.1, "CustomerChurn[TotalCharges]": 5638.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2225-ZRGSG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 93.9, "CustomerChurn[TotalCharges]": 6579.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7253-UVNDW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 54.35, "CustomerChurn[TotalCharges]": 2460.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9906-NHHVC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 53.5, "CustomerChurn[TotalCharges]": 3517.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2000-DHJUY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 92.2, "CustomerChurn[TotalCharges]": 6474.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4176-RELJR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.1, "CustomerChurn[TotalCharges]": 1672.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4199-QHJNM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 102.9, "CustomerChurn[TotalCharges]": 6989.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1635-NZATJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.45, "CustomerChurn[TotalCharges]": 1789.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4698-KVLLG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 19.6, "CustomerChurn[TotalCharges]": 967.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9000-PLFUZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 49.45, "CustomerChurn[TotalCharges]": 2907.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0343-QLUZP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 39.6, "CustomerChurn[TotalCharges]": 2424.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5110-CHOPY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 53.6, "CustomerChurn[TotalCharges]": 3237.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7816-VGHTO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 40.55, "CustomerChurn[TotalCharges]": 217.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1459-QNFQT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 59.5, "CustomerChurn[TotalCharges]": 4144.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1371-DWPAZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 0, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 56.05, "CustomerChurn[TotalCharges]": null, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0562-KBDVM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 44.6, "CustomerChurn[TotalCharges]": 3058.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4872-JCVCA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 47.6, "CustomerChurn[TotalCharges]": 3377.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5317-FLPJF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 61.35, "CustomerChurn[TotalCharges]": 4193.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9867-XOBQA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 53.15, "CustomerChurn[TotalCharges]": 1183.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1271-UODNO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 39, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 53.85, "CustomerChurn[TotalCharges]": 2200.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0263-FJTQO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 50, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 70.5, "CustomerChurn[TotalCharges]": 3486.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2676-SSLTO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 66.15, "CustomerChurn[TotalCharges]": 3199.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6586-MYGKD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 76.95, "CustomerChurn[TotalCharges]": 5289.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6898-RBTLU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 79.3, "CustomerChurn[TotalCharges]": 3902.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7014-ZZXAW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 24.25, "CustomerChurn[TotalCharges]": 1732.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3088-FVYWK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 53, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.55, "CustomerChurn[TotalCharges]": 1336.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3261-CQXOL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.45, "CustomerChurn[TotalCharges]": 1813.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9108-EQPNQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 26.1, "CustomerChurn[TotalCharges]": 225.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9337-SRRNI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.3, "CustomerChurn[TotalCharges]": 1673.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5356-KZCKT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 58, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 24.45, "CustomerChurn[TotalCharges]": 1513.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5622-UEJFI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.4, "CustomerChurn[TotalCharges]": 949.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2481-SBOYW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 61, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 1498.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9648-BCHKM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 24.65, "CustomerChurn[TotalCharges]": 471.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2169-RRLFW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.6, "CustomerChurn[TotalCharges]": 1888.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4534-WGCIR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 58, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.15, "CustomerChurn[TotalCharges]": 1509.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2511-ALLCS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 24.3, "CustomerChurn[TotalCharges]": 821.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0323-XWWTN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 26.4, "CustomerChurn[TotalCharges]": 121.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8219-VYBVI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 39, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 1004.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6199-IPCAO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 26.1, "CustomerChurn[TotalCharges]": 692.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8626-XHBIE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.8, "CustomerChurn[TotalCharges]": 1424.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2263-SFSQZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.95, "CustomerChurn[TotalCharges]": 1222.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2954-PIBKO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 64.15, "CustomerChurn[TotalCharges]": 4254.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3200-MNQTF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 70.9, "CustomerChurn[TotalCharges]": 4677.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3948-KXDUF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 68.75, "CustomerChurn[TotalCharges]": 4447.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7691-XVTZH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 89.95, "CustomerChurn[TotalCharges]": 5974.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6900-RBKER", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 89.45, "CustomerChurn[TotalCharges]": 4577.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6741-QRLUP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 80.3, "CustomerChurn[TotalCharges]": 4995.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5855-EIBDE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 106.65, "CustomerChurn[TotalCharges]": 5174.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0678-RLHVP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 53, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 105.55, "CustomerChurn[TotalCharges]": 5682.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6754-LZUKA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 61, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 80.9, "CustomerChurn[TotalCharges]": 4932.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3197-NNYNB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 105.1, "CustomerChurn[TotalCharges]": 6631.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7233-PAHHL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 84.0, "CustomerChurn[TotalCharges]": 5714.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6901-GOGZG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.95, "CustomerChurn[TotalCharges]": 4984.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0960-HUWBM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 104.1, "CustomerChurn[TotalCharges]": 6700.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6733-LRIZX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 108.95, "CustomerChurn[TotalCharges]": 4025.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8060-HIWJJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 64, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 86.55, "CustomerChurn[TotalCharges]": 5632.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3612-YUNGG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 64, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 109.2, "CustomerChurn[TotalCharges]": 6741.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2990-OGYTD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 86.15, "CustomerChurn[TotalCharges]": 5883.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3870-SPZSI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 113.05, "CustomerChurn[TotalCharges]": 7869.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0839-JTCUD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 89.9, "CustomerChurn[TotalCharges]": 5958.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4674-HGNUA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 89.9, "CustomerChurn[TotalCharges]": 6457.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9224-VTYID", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 47, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 90.5, "CustomerChurn[TotalCharges]": 4318.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8690-ZVLCL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 88.0, "CustomerChurn[TotalCharges]": 6161.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3508-VLHCZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 90.55, "CustomerChurn[TotalCharges]": 6239.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1741-WTPON", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 115.85, "CustomerChurn[TotalCharges]": 6567.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1023-BQXZE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 57, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 74.35, "CustomerChurn[TotalCharges]": 4317.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1303-SRDOK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 69.05, "CustomerChurn[TotalCharges]": 3842.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3397-AVTKU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 60.0, "CustomerChurn[TotalCharges]": 2548.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7954-MLBUN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 99.45, "CustomerChurn[TotalCharges]": 3109.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9432-RUVSL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 48, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 102.5, "CustomerChurn[TotalCharges]": 4904.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0320-DWVTU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 53, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 99.5, "CustomerChurn[TotalCharges]": 5424.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5090-EMGTC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 100.05, "CustomerChurn[TotalCharges]": 6034.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3410-YOQBQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 79.2, "CustomerChurn[TotalCharges]": 2497.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4115-BNPJY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 75.55, "CustomerChurn[TotalCharges]": 2054.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3174-AKMAS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 64.2, "CustomerChurn[TotalCharges]": 3009.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1431-AIDJQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 82.1, "CustomerChurn[TotalCharges]": 2603.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9073-ZZIAY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.1, "CustomerChurn[TotalCharges]": 5215.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8999-YPYBV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 45, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 84.35, "CustomerChurn[TotalCharges]": 3858.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6997-UVGOX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 85.45, "CustomerChurn[TotalCharges]": 6029.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5485-ITNPC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 85.9, "CustomerChurn[TotalCharges]": 5595.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5680-LQOGP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 82.45, "CustomerChurn[TotalCharges]": 5646.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8229-BUJHX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 20.5, "CustomerChurn[TotalCharges]": 1500.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1955-IBMMB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 20.2, "CustomerChurn[TotalCharges]": 1192.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7673-BQGKU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 20.15, "CustomerChurn[TotalCharges]": 1337.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2888-ADFAO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 47, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 21.3, "CustomerChurn[TotalCharges]": 1041.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6828-HMKWP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 21.05, "CustomerChurn[TotalCharges]": 262.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3308-DGHKL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 19.3, "CustomerChurn[TotalCharges]": 1447.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6685-XSHHU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 20.95, "CustomerChurn[TotalCharges]": 1270.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7242-EDTYC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 44, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 19.55, "CustomerChurn[TotalCharges]": 819.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0374-FIUCA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.4, "CustomerChurn[TotalCharges]": 1414.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1764-VUUMT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 19.95, "CustomerChurn[TotalCharges]": 1269.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6621-NRZAK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.0, "CustomerChurn[TotalCharges]": 1209.25, "CustomerChurn[Churn]": false}], "samplecount": 719, "samplefile": "/FileStore/platform/sampleData/64df5f91fc34b1031a5951ca/part-00000-0db51ac6-a35f-48ab-b08d-924c6a6e96b6-c000.csv"}, {"_id": "64df5f91fc34b1031a5951cb", "mode": "staged", "originalfile": "/FileStore/platform/extra/tempFile1692360590.csv", "in": ["64df5f91fc34b1031a5951ca"], "out": ["64df5f91fc34b1031a5951cc"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "TelcoChurn_PBI_AutoFE", "dataPercentage": "10", "comment": "", "pipeline_id": "64df5f91fc34b1031a5951c7", "sub_type": "Feature", "stage_type": "transformation", "stage_attributes": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "100", "sampledata": [{"CustomerChurn[customerID]": "0390-DCFDQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 160.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5940-AHUHD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 172.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5583-SXDAG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 150.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4110-PFEUZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 388.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8040-MNRTF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 136.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1820-TQVEV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 237.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5875-YPQFJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 422.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7206-GZCDC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 12.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8375-DKEBR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 149.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9804-ICWBG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 81.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8380-PEFPE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 152.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3494-JCHRQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 419.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8000-REIQB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 156.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8309-IEYJD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 373.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3177-LASXD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 181.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1084-UQCHV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 28.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "8051-HJRLT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 105.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0151-ONTOV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 282.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6140-QNRQQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 274.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1846-XWOQN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 484.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9603-OAIHC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 469.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5186-SAMNZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 428.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "2262-SLNVK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 103.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5539-TMZLF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 396.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7409-KIUTL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 252.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0679-IDSTG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 112.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5542-TBBWB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 337.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1086-LXKFY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 51.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "2636-ALXXZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 260.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1640-PLFMP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 45.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9617-INGJY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 170.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4510-HIMLV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 326.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3878-AVSOQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 85.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3716-BDVDB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 332.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9488-HGMJH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 359.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0968-GSIKN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 442.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4806-HIPDW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 68.0, "CustomerChurn[TotalCharges]": 68.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 483.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8644-XLFBW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 71.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0812-WUPTB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 426.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3871-IKPYH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 56.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2920-RNCEZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 448.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "1915-IOFGU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 403.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7665-TOALD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 256.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6416-TVAIH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 68.0, "CustomerChurn[TotalCharges]": 68.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 169.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3066-RRJIO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 78.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "0515-YPMCW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 235.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4603-JANFB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 234.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7908-QCBCA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 342.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7465-ZZRVX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 94.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4702-IOQDC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 111.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3428-XZMAZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 436.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1853-UDXBW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 407.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5032-MIYKT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 46.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "0511-JTEOY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 338.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5134-IKDAY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 346.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5884-GCYMI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 479.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6653-CBBOM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 362.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4759-TRPLW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 145.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8062-YBDOE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 34.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5376-DEQCP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 104.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2506-TNFCO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 80.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2619-WFQWU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 292.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5550-VFRLC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 377.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3244-DCJWY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 430.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8042-JVNFH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 351.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9985-MWVIX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 283.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4871-JTKJF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 89.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3422-LYEPQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 447.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1363-TXLSL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 441.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4550-EVXNY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 463.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0519-XUZJU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 416.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9605-WGJVW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 70.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7153-OANIO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 225.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0328-GRPMV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 42.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0488-GSLFR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 411.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9728-FTTVZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 0.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7254-IQWOZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 209.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2856-HYAPG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 68.0, "CustomerChurn[TotalCharges]": 68.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 417.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1031-IIDEO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 76.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1062-LHZOD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 285.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1447-GIQMR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 23.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7660-HDPJV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 491.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2446-PLQVO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 350.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4501-EQDRN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 492.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "6457-GIRWB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 241.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6502-MJQAE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 141.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1122-JWTJW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 482.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3413-BMNZE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 98.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "2135-RXIHG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 284.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6582-OIVSP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 391.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8705-WZCYL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 20.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5522-JBWMO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 228.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9244-ZVAPM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 361.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "0887-HJGAR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 365.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6982-SSHFK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 162.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9448-REEVD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 424.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "9117-SHLZX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 456.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3165-HDOEW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 289.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5552-ZNFSJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 405.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2833-SLKDQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 202.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4237-RLAQD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 223.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1478-VPOAD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 43.0, "CustomerChurn[TotalCharges]": 43.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 401.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6650-VJONK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 43.0, "CustomerChurn[TotalCharges]": 43.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 266.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "8080-DDEMJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 190.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8356-WUAOJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 319.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3669-OYSJI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 46.0, "CustomerChurn[TotalCharges]": 46.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 95.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "1612-EOHDH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 108.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7054-LGEQW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 336.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3961-SXAXY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 67.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "3566-HJGPK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 435.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4193-ORFCL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 434.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9828-AOQLM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 446.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7065-YUNRY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 191.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5858-EAFCZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 159.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1895-QTKDO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 43.0, "CustomerChurn[TotalCharges]": 43.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 36.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "4706-DGAHW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 356.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5103-MHMHY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 106.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4373-VVHQL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 353.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1942-OQFRW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 287.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0415-MOSGF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 345.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4146-SVFUD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 485.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5696-QURRL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 77.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5692-FPTAH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 4.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5133-POWUA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 199.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5077-DXTCG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 473.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7593-XFKDI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 46.0, "CustomerChurn[TotalCharges]": 46.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 73.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7663-RGWBC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 281.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8950-MTZNV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 478.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8710-YGLWG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 185.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6128-CZOMY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 327.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6185-TASNN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 46.0, "CustomerChurn[TotalCharges]": 46.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 207.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7825-GKXMW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 219.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2903-YYTBW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 466.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7359-PTSXY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 431.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6959-UWKHF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 42.0, "CustomerChurn[TotalCharges]": 42.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 97.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8720-RQSBJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 300.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7754-IXRMC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 66.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "2672-OJQZP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 372.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6145-NNPNO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 302.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "6595-COKXZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 87.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8180-AKMJV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 151.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "4855-SNKMY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 187.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7252-NTGSS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 16.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "2082-CEFLT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 211.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6142-VSJQO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 177.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "2275-RBYQS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 427.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1976-CFOCS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 46.0, "CustomerChurn[TotalCharges]": 46.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 166.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4361-JEIVL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 173.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9214-EKVXR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 409.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "0082-LDZUE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 305.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4847-QNOKA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 134.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "1963-SVUCV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 75.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6127-IYJOZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 60.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3085-QUOZK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 43.0, "CustomerChurn[TotalCharges]": 43.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 452.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3926-CUQZX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 15.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "1024-GUALD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 443.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4195-NZGTA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 322.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6366-ZGQGL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 63.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "0021-IKXGC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 72.0, "CustomerChurn[TotalCharges]": 72.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 355.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6158-HDPXZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 146.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1452-VOQCH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 325.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8372-JUXUI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 176.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3276-HDUEG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 231.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9227-LUNBG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 290.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6513-EECDB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.0, "CustomerChurn[TotalCharges]": 73.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 184.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6358-LYNGM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 91.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7537-RBWEA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 488.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1768-ZAIFU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 288.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3334-CTHOL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 49.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 378.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "6960-HVYXR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.0, "CustomerChurn[TotalCharges]": 76.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 313.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7767-UXAGJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 132.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8445-DNBAE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 72.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5240-IJOQT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 79.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0661-XEYAN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 116.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1157-BQCUW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 248.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7442-YGZFK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 49.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 14.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "5834-ASPWA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 261.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8775-ERLNB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 129.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2538-OIMXF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 275.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9787-XVQIU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 1.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0248-IPDFW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 5.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7180-PISOG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 74.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2672-DZUOY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 259.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2609-IAICY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 77.0, "CustomerChurn[TotalCharges]": 77.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 309.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3707-GNWHM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 171.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4749-VFKVB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 55.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4102-OQUPX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 232.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2740-TVLFN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 334.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2209-XADXF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 265.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "6032-IGALN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 381.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9907-SWKKF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 270.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7365-BVCJH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 444.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4988-IQIGL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 131.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3746-EUBYR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 154.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "0612-RTZZA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 437.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8816-VXNZD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 244.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2103-ZRXFN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 143.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9136-ALYBR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 414.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8260-NGFNY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 25.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1833-VGRUM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 251.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1334-FJSVR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 102.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0023-HGHWL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 421.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4729-XKASR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 249.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9058-CBREO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 124.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9895-VFOXH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 196.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "2982-IHMFT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 468.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7932-WPTDS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 497.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8473-VUVJN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.0, "CustomerChurn[TotalCharges]": 73.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 37.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2862-PFNIK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 480.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4367-NHWMM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 68.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3797-VTIDR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 23.0, "CustomerChurn[TotalCharges]": 23.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 481.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1496-GGSUK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 440.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3551-HUAZH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 368.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0616-ATFGB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 269.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3439-GVUSX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 454.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7242-QZLXF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 58.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9248-OJYKK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.0, "CustomerChurn[TotalCharges]": 76.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 115.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4415-IJZTP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 30.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5351-QESIO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 142.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "0723-DRCLG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 168.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6894-LFHLY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 174.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3091-FYHKI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.0, "CustomerChurn[TotalCharges]": 35.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 127.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1285-OKIPP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 323.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3583-EKAPL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 50.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9282-IZGQK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 85.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 165.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1448-PWKYE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 10.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8603-IJWDN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.0, "CustomerChurn[TotalCharges]": 86.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 321.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0841-NULXI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.0, "CustomerChurn[TotalCharges]": 35.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 198.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5673-FSSMF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 60.0, "CustomerChurn[TotalCharges]": 60.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 61.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3049-NDXFL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 85.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 475.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "2018-QKYGT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 81.0, "CustomerChurn[TotalCharges]": 81.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 258.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9822-OAOVB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 277.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7854-FOKSF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.0, "CustomerChurn[TotalCharges]": 35.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 408.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1740-CSDJP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 35.0, "CustomerChurn[TotalCharges]": 35.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 367.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "4074-SJFFA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 54.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 218.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4727-MCYZG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 158.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "2004-OCQXK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 81.0, "CustomerChurn[TotalCharges]": 81.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 393.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0495-RVCBF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 317.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5501-TVMGM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 462.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9124-LHCJQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 85.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 41.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7594-RQHXR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 126.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6086-ESGRL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 40.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "5275-SQEIZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 316.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8945-GRKHX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.0, "CustomerChurn[TotalCharges]": 78.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 358.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1069-XAIEM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 85.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 2.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4614-NUVZD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 81.0, "CustomerChurn[TotalCharges]": 81.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 354.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6629-CZTTH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 273.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5393-RXQSZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 22.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3841-CONLJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.0, "CustomerChurn[TotalCharges]": 35.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 413.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3063-QFSZL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 140.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2868-MZAGQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 92.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2867-UIMSS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 11.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3751-KTZEL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 35.0, "CustomerChurn[TotalCharges]": 35.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 423.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5909-ECHUI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 56.0, "CustomerChurn[TotalCharges]": 56.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 279.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6457-USBER", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 125.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5919-TMRGD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 387.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2232-DMLXU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 121.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5192-EBGOV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 85.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 268.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0970-ETWGE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.0, "CustomerChurn[TotalCharges]": 89.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 123.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3027-ZTDHO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.0, "CustomerChurn[TotalCharges]": 89.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 216.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7294-TMAOP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 472.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7439-DKZTW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 400.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5494-HECPR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 487.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6260-ONULR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 62.0, "CustomerChurn[TotalCharges]": 62.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 459.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6567-HOOPW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 122.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8580-AECUZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 227.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0375-HVGXO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 34.0, "CustomerChurn[TotalCharges]": 34.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 460.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3877-JRJIP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 59.0, "CustomerChurn[TotalCharges]": 59.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 330.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9497-QCMMS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 93.0, "CustomerChurn[TotalCharges]": 93.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 257.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9300-RENDD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 278.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3988-RQIXO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 91.0, "CustomerChurn[TotalCharges]": 91.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 82.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2514-GINMM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 304.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3722-WPXTK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 88.0, "CustomerChurn[TotalCharges]": 88.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 382.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4910-GMJOT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.0, "CustomerChurn[TotalCharges]": 94.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 453.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2725-KXXWT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 18.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3518-PZXZQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 331.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4826-XTSOH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.0, "CustomerChurn[TotalCharges]": 86.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 35.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6857-VWJDT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 95.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 9.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3801-HMYNL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 89.0, "CustomerChurn[TotalCharges]": 89.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 449.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1761-AEZZR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 320.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7120-RFMVS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.0, "CustomerChurn[TotalCharges]": 84.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 348.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2386-LAHRK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 53.0, "CustomerChurn[TotalCharges]": 53.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 451.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8149-RSOUN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 93.0, "CustomerChurn[TotalCharges]": 93.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 399.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9885-CSMWE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.0, "CustomerChurn[TotalCharges]": 78.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 255.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5178-LMXOP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 95.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 109.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7274-RTAPZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 43.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5960-WPXQM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 38.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6372-RFVNS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.0, "CustomerChurn[TotalCharges]": 78.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 233.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2777-PHDEI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.0, "CustomerChurn[TotalCharges]": 78.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 392.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5797-APWZC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 347.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9019-QVLZD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 264.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1455-ESIQH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.0, "CustomerChurn[TotalCharges]": 89.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 341.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0318-QUUOB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 369.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8740-CRYFY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.0, "CustomerChurn[TotalCharges]": 78.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 32.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9300-AGZNL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.0, "CustomerChurn[TotalCharges]": 94.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 208.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5378-IKEEG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.0, "CustomerChurn[TotalCharges]": 35.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 291.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9725-SCPZG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 490.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7577-SWIFR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.0, "CustomerChurn[TotalCharges]": 89.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 324.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3776-EKTKM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 36.0, "CustomerChurn[TotalCharges]": 36.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 195.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8058-INTPH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 204.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8821-XNHVZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 226.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1941-HOSAM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 186.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4273-MBHYA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.0, "CustomerChurn[TotalCharges]": 89.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 212.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7503-ZGUZJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 84.0, "CustomerChurn[TotalCharges]": 84.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 192.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4912-PIGUY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.0, "CustomerChurn[TotalCharges]": 84.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 53.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4929-BSTRX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 53.0, "CustomerChurn[TotalCharges]": 53.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 205.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1415-YFWLT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.0, "CustomerChurn[TotalCharges]": 89.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 206.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9507-EXLTT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 137.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "7568-PODML", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 363.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6521-YYTYI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 93.0, "CustomerChurn[TotalCharges]": 93.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 311.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4351-QLCSU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 375.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "0674-EYYZV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 54.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 147.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0295-PPHDO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 95.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 175.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7590-VHVEG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 29.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 133.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8665-UTDHZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 30.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 374.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6317-YPKDH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 29.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 117.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "9514-JDSKI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 40.0, "CustomerChurn[TotalCharges]": 40.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 476.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6905-NIQIN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 239.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5167-ZFFMM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 90.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 247.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "9399-APLBT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 183.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2207-NHRJK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 467.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4065-JJAVA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 49.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 298.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5868-CZJDR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 31.0, "CustomerChurn[TotalCharges]": 31.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 380.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7595-EUIVN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 420.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1866-OBPNR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 167.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "5054-IEXZT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 128.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0137-OCGAB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 48.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1845-ZLLIG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 328.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1406-PUQVY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 49.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 425.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2254-DLXRI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 238.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4317-VTEOA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 44.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6689-KXGBO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 179.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3178-FESZO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 100.0, "CustomerChurn[TotalCharges]": 100.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 470.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "2013-SGDXK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.0, "CustomerChurn[TotalCharges]": 84.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 31.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4274-OWWYO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 494.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3765-JXVKY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 315.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9840-EFJQB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 194.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6907-FLBER", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 54.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 299.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9752-ZNQUT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 48.0, "CustomerChurn[TotalCharges]": 48.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 312.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5196-SGOAK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 357.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4844-JJWUY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.0, "CustomerChurn[TotalCharges]": 86.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 477.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1628-BIZYP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 85.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 19.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8775-LHDJH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 113.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3296-SILRA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 76.0, "CustomerChurn[TotalCharges]": 76.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 217.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1977-STDKI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.0, "CustomerChurn[TotalCharges]": 73.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 471.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7493-TPUWZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 213.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9894-EZEWG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 33.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "1471-GIQKQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 49.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 457.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6614-VBEGU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 1614.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 200.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "0823-HSCDJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 2550.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 221.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9505-SQFSW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 40.0, "CustomerChurn[TotalCharges]": 92.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 310.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5073-WXOYN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 3027.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 164.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8807-ARQET", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 41, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 40.0, "CustomerChurn[TotalCharges]": 1677.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 90.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4468-KAZHE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 60.0, "CustomerChurn[TotalCharges]": 1259.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 271.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2625-TRCZQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 2553.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 439.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7721-JXEAW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 41.0, "CustomerChurn[TotalCharges]": 2452.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 370.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "1636-NTNCO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 207.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 461.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "1104-FEJAM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 64.0, "CustomerChurn[TotalCharges]": 1802.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 254.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2636-OHFMN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 48.0, "CustomerChurn[TotalCharges]": 201.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 101.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2141-RRYGO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 68.0, "CustomerChurn[TotalCharges]": 261.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 474.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "3665-JATSN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 39.0, "CustomerChurn[TotalCharges]": 710.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 335.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7284-BUYEC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 229.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 47.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "2041-JIJCI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 64.0, "CustomerChurn[TotalCharges]": 370.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 465.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9026-LHEVG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 40.0, "CustomerChurn[TotalCharges]": 359.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 389.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3329-WDIOK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 155.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 455.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2187-LZGPL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 40.0, "CustomerChurn[TotalCharges]": 293.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 107.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "6217-TOWGS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 1322.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 318.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "1100-DDVRV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 836.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 308.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3669-LVWZB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 305.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 272.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7502-BNYGS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 3168.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 343.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "0980-PVMRC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 2036.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 333.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2969-QWUBZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 96.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 180.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9693-XMUOB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 2997.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 339.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0212-ISBBF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 1098.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 88.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5438-QMDDL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 59.0, "CustomerChurn[TotalCharges]": 1130.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 189.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3999-WRNGR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 3069.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 153.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6778-YSNIH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 59.0, "CustomerChurn[TotalCharges]": 114.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 188.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0319-QZTCO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 58.0, "CustomerChurn[TotalCharges]": 168.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 464.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "1697-BCSHV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 58, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 66.0, "CustomerChurn[TotalCharges]": 3970.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 93.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "4628-CTTLA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 57, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 39.0, "CustomerChurn[TotalCharges]": 2111.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 99.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2436-QBZFP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 39.0, "CustomerChurn[TotalCharges]": 849.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 84.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1862-SKORY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 39.0, "CustomerChurn[TotalCharges]": 1637.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 215.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9633-DENPU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 47, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 58.0, "CustomerChurn[TotalCharges]": 2723.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 498.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "5424-RLQLC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 59.0, "CustomerChurn[TotalCharges]": 638.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 39.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "2931-FSOHN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 59.0, "CustomerChurn[TotalCharges]": 788.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 383.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6218-KNUBD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 59.0, "CustomerChurn[TotalCharges]": 357.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 27.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0786-VSSUD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 39.0, "CustomerChurn[TotalCharges]": 679.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 130.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5948-UJZLF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 97.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 245.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4827-USJHP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 1023.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 301.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8017-UVSZU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 56.0, "CustomerChurn[TotalCharges]": 2379.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 26.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "1251-KRREG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 114.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 486.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4130-MZLCC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 244.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 438.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "8229-MYEJZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 498.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 395.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6235-VDHOM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 28.0, "CustomerChurn[TotalCharges]": 131.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 286.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6543-CPZMK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 248.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 397.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1456-TWCGB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 208.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 433.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9342-VNIMQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 1665.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 489.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "0811-GSDTP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 382.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 57.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8919-FYFQZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 44, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 1359.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 65.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3097-NNSPB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 91.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 148.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "3391-JSQEW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 2058.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 344.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8791-GFXLZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 593.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 366.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "2446-ZKVAF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 56.0, "CustomerChurn[TotalCharges]": 1074.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 394.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "8967-SZQAS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 765.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 276.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6789-HJBWG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 611.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 371.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9992-UJOEL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 92.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 493.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6625-UTXEW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 612.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 83.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5651-WYIPH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 865.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 262.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "2586-CWXVV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 54, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 1621.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 229.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5423-BHIXO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 32, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 1739.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 24.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8069-YQQAJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 31.0, "CustomerChurn[TotalCharges]": 419.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 404.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7776-QWNFX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 1527.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 161.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "6637-KYRCV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 167.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 120.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3723-BFBGR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 1291.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 100.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "8901-HJXTF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 309.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 220.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5156-UMKOW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 445.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1247-QBVSH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 2169.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 201.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7389-KBFIT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 63.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 144.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9163-GHAYE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 48.0, "CustomerChurn[TotalCharges]": 736.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 118.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1322-AGOQM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 1380.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 139.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "1432-FPAXX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 856.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 7.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7636-OWBPG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 381.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 349.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "3082-VQXNH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 94.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 21.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "5402-HTOTQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 875.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 3.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2108-YKQTY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 151.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 297.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "0975-VOOVL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 98.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 59.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8148-BPLZQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 1734.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 246.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3209-ZPKFI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 47, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 2538.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 495.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7579-OOPEC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 115.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 8.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "8805-JNRAZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 103.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 406.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5816-SCGFC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 419.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 458.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7421-ZLUPA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 226.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 314.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5404-GGUKR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 262.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 280.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3345-PBBFH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 393.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 210.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "1226-UDFZR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 114.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 402.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9415-TPKRV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 446.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 303.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7501-VTYLJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 106.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 376.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7740-KKCXF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 1529.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 64.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "2606-RMDHZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 208.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 294.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "4353-HYOJD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 1336.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 418.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1078-TDCRN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 82.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 69.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8718-PTMEZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 31.0, "CustomerChurn[TotalCharges]": 347.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 178.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1114-CENIM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 54, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 3092.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 496.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "3173-NVMPX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 501.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 240.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6339-DKLMK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 31.0, "CustomerChurn[TotalCharges]": 389.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 52.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3873-NFTGI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 767.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 193.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "3570-YUEKJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 42, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 2077.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 236.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3538-WZPHD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 29.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7054-ENNGU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 466.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 13.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9881-VCZEP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 1373.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 197.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8654-DHAOW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 101.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 263.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7872-RDDLZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 3725.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 54.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6048-QBXKL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 56.0, "CustomerChurn[TotalCharges]": 118.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 250.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "3256-EZDBI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 1459.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 306.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "8344-WFMFH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 484.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 432.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1395-OFUWC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 1224.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 293.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "1442-BQPVU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 357.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 203.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1596-OQSPS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 531.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 6.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2843-CQMEG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 1218.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 499.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6304-IJFSQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 130.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 135.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "0094-OIFMO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 1120.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 412.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9947-OTFQU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 1074.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 385.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3488-PGMQJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 606.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 386.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7982-VCELR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 36, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 94.0, "CustomerChurn[TotalCharges]": 3565.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 214.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "6862-CQUMB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 96.0, "CustomerChurn[TotalCharges]": 3646.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 163.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "6599-CEBNN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 73.0, "CustomerChurn[TotalCharges]": 2524.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 329.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "0111-KLBQG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 32, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 93.0, "CustomerChurn[TotalCharges]": 2861.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 307.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7916-VCCPB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 73.0, "CustomerChurn[TotalCharges]": 1195.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 390.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "0578-SKVMF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 83.0, "CustomerChurn[TotalCharges]": 1845.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 114.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5949-XIKAE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 83.0, "CustomerChurn[TotalCharges]": 680.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 157.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6986-IJDHX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 39, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 86.0, "CustomerChurn[TotalCharges]": 3266.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 296.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1216-JWVUX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 1901.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 182.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2189-WWOEW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 1269.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 384.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "3138-BKYAV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 489.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 267.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0947-MUGVO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.0, "CustomerChurn[TotalCharges]": 1463.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 352.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9944-HKVVB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 307.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 379.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1907-UBQFC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 72.0, "CustomerChurn[TotalCharges]": 688.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 360.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5146-CBVOE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 1212.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 364.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "8584-KMVXD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 535.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 110.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5651-YLPRD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 32, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.0, "CustomerChurn[TotalCharges]": 2723.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 242.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8242-SOQUO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.0, "CustomerChurn[TotalCharges]": 392.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 243.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3733-LSYCE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 1114.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 450.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "9793-WECQC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 2192.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 429.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5899-OUVKV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.0, "CustomerChurn[TotalCharges]": 2979.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 49.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2984-AFWNC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 293.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 155.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2761-OCIAX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 165.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 415.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8017-LXHFA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.0, "CustomerChurn[TotalCharges]": 2293.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 230.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5035-BVCXS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 866.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 17.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6407-UTSLV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 83.0, "CustomerChurn[TotalCharges]": 163.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 224.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "5318-IXUZF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 87.0, "CustomerChurn[TotalCharges]": 183.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 119.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "8496-EJAUI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 73.0, "CustomerChurn[TotalCharges]": 1424.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 96.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "4143-HHPMK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 4338.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 340.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0923-PNFUB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 83.0, "CustomerChurn[TotalCharges]": 247.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 222.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3365-SAIGS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 83.0, "CustomerChurn[TotalCharges]": 1329.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 410.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5989-PGKJB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.0, "CustomerChurn[TotalCharges]": 1340.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 86.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8337-MSSXB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.0, "CustomerChurn[TotalCharges]": 1180.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 295.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2528-HFYZX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.0, "CustomerChurn[TotalCharges]": 1233.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 138.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2135-DQWAQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 420.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 62.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7548-SEPYI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 96.0, "CustomerChurn[TotalCharges]": 512.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 398.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7503-QQRVF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 1178.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 253.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}], "FE": [{"transformationsData": [{"feature_label": "CustomerChurn[customerID]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[customerID]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "0021-IKXGC", "max": "9992-UJOEL", "missing": "0", "distinct": "500"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[customerID]"}, {"transformationsData": [{"feature_label": "CustomerChurn[gender]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[gender]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Female", "max": "Male", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[gender]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[SeniorCitizen]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.2", "stddev": "0.4", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[SeniorCitiz..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Partner]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.22", "stddev": "0.41", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Partner]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Dependents]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.15", "stddev": "0.36", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Dependents]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[tenure]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "6.53", "stddev": "12.57", "min": "1", "max": "67", "missing": "0"}, "updatedLabel": "CustomerChurn[tenure]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[PhoneService]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.81", "stddev": "0.39", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[PhoneServic..."}, {"transformationsData": [{"feature_label": "CustomerChurn[MultipleLines]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[MultipleLines]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "3"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[MultipleLin..."}, {"transformationsData": [{"feature_label": "CustomerChurn[InternetService]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[InternetService]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "DSL", "max": "Fiber optic", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[InternetSer..."}, {"transformationsData": [{"feature_label": "CustomerChurn[OnlineSecurity]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[OnlineSecurity]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[OnlineSecur..."}, {"transformationsData": [{"feature_label": "CustomerChurn[OnlineBackup]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[OnlineBackup]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[OnlineBacku..."}, {"transformationsData": [{"feature_label": "CustomerChurn[DeviceProtection]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[DeviceProtection]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[DeviceProte..."}, {"transformationsData": [{"feature_label": "CustomerChurn[TechSupport]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[TechSupport]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[TechSupport..."}, {"transformationsData": [{"feature_label": "CustomerChurn[StreamingTV]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[StreamingTV]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[StreamingTV..."}, {"transformationsData": [{"feature_label": "CustomerChurn[StreamingMovies]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[StreamingMovies]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[StreamingMo..."}, {"transformationsData": [{"feature_label": "CustomerChurn[Contract]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[Contract]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Month-to-month", "max": "Month-to-month", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[Contract]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[PaperlessBilling]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.7", "stddev": "0.46", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[PaperlessBi..."}, {"transformationsData": [{"feature_label": "CustomerChurn[PaymentMethod]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[PaymentMethod]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Bank transfer (automatic)", "max": "Mailed check", "missing": "0", "distinct": "4"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[PaymentMeth..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[MonthlyCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "60.22", "stddev": "19.34", "min": "23.45", "max": "100.25", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[MonthlyChar..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[TotalCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "370.74", "stddev": "721.08", "min": "23.45", "max": "4338.6", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[TotalCharge..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Churn]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.62", "stddev": "0.48", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Churn]"}, {"feature": "CustomerChurn[customerID]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "249.5", "stddev": "144.48", "min": "0.0", "max": "499.0", "missing": "0"}, "updatedLabel": "CustomerChurn[customerID]..."}, {"feature": "CustomerChurn[gender]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.48", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[gender]_str..."}, {"feature": "CustomerChurn[MultipleLines]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.52", "stddev": "0.76", "min": "0", "max": "2", "missing": "0"}, "updatedLabel": "CustomerChurn[MultipleLin..."}, {"feature": "CustomerChurn[InternetService]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.48", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[InternetSer..."}, {"feature": "CustomerChurn[OnlineSecurity]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "CustomerChurn[OnlineSecur..."}, {"feature": "CustomerChurn[OnlineBackup]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.37", "stddev": "0.48", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[OnlineBacku..."}, {"feature": "CustomerChurn[DeviceProtection]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "CustomerChurn[DeviceProte..."}, {"feature": "CustomerChurn[TechSupport]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "CustomerChurn[TechSupport..."}, {"feature": "CustomerChurn[StreamingTV]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.22", "stddev": "0.42", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[StreamingTV..."}, {"feature": "CustomerChurn[StreamingMovies]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.21", "stddev": "0.41", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[StreamingMo..."}, {"feature": "CustomerChurn[Contract]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "CustomerChurn[Contract]_s..."}, {"feature": "CustomerChurn[PaymentMethod]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.62", "stddev": "0.9", "min": "0", "max": "3", "missing": "0"}, "updatedLabel": "CustomerChurn[PaymentMeth..."}], "samplecount": 500, "message": "Successfully executed", "status": 1, "userid": "15431221-f3af-496e-83cd-2ef74ecb4fcc", "FEGraph": [{"values": {"label": ["0390-DCFDQ", "5940-AHUHD", "5583-SXDAG", "4110-PFEUZ", "8040-MNRTF", "1820-TQVEV", "5875-YPQFJ", "7206-GZCDC", "8375-DKEBR", "9804-ICWBG", "8380-PEFPE", "3494-JCHRQ", "8000-REIQB", "8309-IEYJD", "3177-LASXD", "1084-UQCHV", "8051-HJRLT", "0151-ONTOV", "6140-QNRQQ", "1846-XWOQN", "9603-OAIHC", "5186-SAMNZ", "2262-SLNVK", "5539-TMZLF", "7409-KIUTL", "0679-IDSTG", "5542-TBBWB", "1086-LXKFY", "2636-ALXXZ", "1640-PLFMP", "9617-INGJY", "4510-HIMLV", "3878-AVSOQ", "3716-BDVDB", "9488-HGMJH", "0968-GSIKN", "4806-HIPDW", "8644-XLFBW", "0812-WUPTB", "3871-IKPYH", "2920-RNCEZ", "1915-IOFGU", "7665-TOALD", "6416-TVAIH", "3066-RRJIO", "0515-YPMCW", "4603-JANFB", "7908-QCBCA", "7465-ZZRVX", "4702-IOQDC", "3428-XZMAZ", "1853-UDXBW", "5032-MIYKT", "0511-JTEOY", "5134-IKDAY", "5884-GCYMI", "6653-CBBOM", "4759-TRPLW", "8062-YBDOE", "5376-DEQCP", "2506-TNFCO", "2619-WFQWU", "5550-VFRLC", "3244-DCJWY", "8042-JVNFH", "9985-MWVIX", "4871-JTKJF", "3422-LYEPQ", "1363-TXLSL", "4550-EVXNY", "0519-XUZJU", "9605-WGJVW", "7153-OANIO", "0328-GRPMV", "0488-GSLFR", "9728-FTTVZ", "7254-IQWOZ", "2856-HYAPG", "1031-IIDEO", "1062-LHZOD", "1447-GIQMR", "7660-HDPJV", "2446-PLQVO", "4501-EQDRN", "6457-GIRWB", "6502-MJQAE", "1122-JWTJW", "3413-BMNZE", "2135-RXIHG", "6582-OIVSP", "8705-WZCYL", "5522-JBWMO", "9244-ZVAPM", "0887-HJGAR", "6982-SSHFK", "9448-REEVD", "9117-SHLZX", "3165-HDOEW", "5552-ZNFSJ", "2833-SLKDQ", "4237-RLAQD", "1478-VPOAD", "6650-VJONK", "8080-DDEMJ", "8356-WUAOJ", "3669-OYSJI", "1612-EOHDH", "7054-LGEQW", "3961-SXAXY", "3566-HJGPK", "4193-ORFCL", "9828-AOQLM", "7065-YUNRY", "5858-EAFCZ", "1895-QTKDO", "4706-DGAHW", "5103-MHMHY", "4373-VVHQL", "1942-OQFRW", "0415-MOSGF", "4146-SVFUD", "5696-QURRL", "5692-FPTAH", "5133-POWUA", "5077-DXTCG", "7593-XFKDI", "7663-RGWBC", "8950-MTZNV", "8710-YGLWG", "6128-CZOMY", "6185-TASNN", "7825-GKXMW", "2903-YYTBW", "7359-PTSXY", "6959-UWKHF", "8720-RQSBJ", "7754-IXRMC", "2672-OJQZP", "6145-NNPNO", "6595-COKXZ", "8180-AKMJV", "4855-SNKMY", "7252-NTGSS", "2082-CEFLT", "6142-VSJQO", "2275-RBYQS", "1976-CFOCS", "4361-JEIVL", "9214-EKVXR", "0082-LDZUE", "4847-QNOKA", "1963-SVUCV", "6127-IYJOZ", "3085-QUOZK", "3926-CUQZX", "1024-GUALD", "4195-NZGTA", "6366-ZGQGL", "0021-IKXGC", "6158-HDPXZ", "1452-VOQCH", "8372-JUXUI", "3276-HDUEG", "9227-LUNBG", "6513-EECDB", "6358-LYNGM", "7537-RBWEA", "1768-ZAIFU", "3334-CTHOL", "6960-HVYXR", "7767-UXAGJ", "8445-DNBAE", "5240-IJOQT", "0661-XEYAN", "1157-BQCUW", "7442-YGZFK", "5834-ASPWA", "8775-ERLNB", "2538-OIMXF", "9787-XVQIU", "0248-IPDFW", "7180-PISOG", "2672-DZUOY", "2609-IAICY", "3707-GNWHM", "4749-VFKVB", "4102-OQUPX", "2740-TVLFN", "2209-XADXF", "6032-IGALN", "9907-SWKKF", "7365-BVCJH", "4988-IQIGL", "3746-EUBYR", "0612-RTZZA", "8816-VXNZD", "2103-ZRXFN", "9136-ALYBR", "8260-NGFNY", "1833-VGRUM", "1334-FJSVR", "0023-HGHWL", "4729-XKASR", "9058-CBREO", "9895-VFOXH", "2982-IHMFT", "7932-WPTDS", "8473-VUVJN", "2862-PFNIK", "4367-NHWMM", "3797-VTIDR", "1496-GGSUK", "3551-HUAZH", "0616-ATFGB", "3439-GVUSX", "7242-QZLXF", "9248-OJYKK", "4415-IJZTP", "5351-QESIO", "0723-DRCLG", "6894-LFHLY", "3091-FYHKI", "1285-OKIPP", "3583-EKAPL", "9282-IZGQK", "1448-PWKYE", "8603-IJWDN", "0841-NULXI", "5673-FSSMF", "3049-NDXFL", "2018-QKYGT", "9822-OAOVB", "7854-FOKSF", "1740-CSDJP", "4074-SJFFA", "4727-MCYZG", "2004-OCQXK", "0495-RVCBF", "5501-TVMGM", "9124-LHCJQ", "7594-RQHXR", "6086-ESGRL", "5275-SQEIZ", "8945-GRKHX", "1069-XAIEM", "4614-NUVZD", "6629-CZTTH", "5393-RXQSZ", "3841-CONLJ", "3063-QFSZL", "2868-MZAGQ", "2867-UIMSS", "3751-KTZEL", "5909-ECHUI", "6457-USBER", "5919-TMRGD", "2232-DMLXU", "5192-EBGOV", "0970-ETWGE", "3027-ZTDHO", "7294-TMAOP", "7439-DKZTW", "5494-HECPR", "6260-ONULR", "6567-HOOPW", "8580-AECUZ", "0375-HVGXO", "3877-JRJIP", "9497-QCMMS", "9300-RENDD", "3988-RQIXO", "2514-GINMM", "3722-WPXTK", "4910-GMJOT", "2725-KXXWT", "3518-PZXZQ", "4826-XTSOH", "6857-VWJDT", "3801-HMYNL", "1761-AEZZR", "7120-RFMVS", "2386-LAHRK", "8149-RSOUN", "9885-CSMWE", "5178-LMXOP", "7274-RTAPZ", "5960-WPXQM", "6372-RFVNS", "2777-PHDEI", "5797-APWZC", "9019-QVLZD", "1455-ESIQH", "0318-QUUOB", "8740-CRYFY", "9300-AGZNL", "5378-IKEEG", "9725-SCPZG", "7577-SWIFR", "3776-EKTKM", "8058-INTPH", "8821-XNHVZ", "1941-HOSAM", "4273-MBHYA", "7503-ZGUZJ", "4912-PIGUY", "4929-BSTRX", "1415-YFWLT", "9507-EXLTT", "7568-PODML", "6521-YYTYI", "4351-QLCSU", "0674-EYYZV", "0295-PPHDO", "7590-VHVEG", "8665-UTDHZ", "6317-YPKDH", "9514-JDSKI", "6905-NIQIN", "5167-ZFFMM", "9399-APLBT", "2207-NHRJK", "4065-JJAVA", "5868-CZJDR", "7595-EUIVN", "1866-OBPNR", "5054-IEXZT", "0137-OCGAB", "1845-ZLLIG", "1406-PUQVY", "2254-DLXRI", "4317-VTEOA", "6689-KXGBO", "3178-FESZO", "2013-SGDXK", "4274-OWWYO", "3765-JXVKY", "9840-EFJQB", "6907-FLBER", "9752-ZNQUT", "5196-SGOAK", "4844-JJWUY", "1628-BIZYP", "8775-LHDJH", "3296-SILRA", "1977-STDKI", "7493-TPUWZ", "9894-EZEWG", "1471-GIQKQ", "6614-VBEGU", "0823-HSCDJ", "9505-SQFSW", "5073-WXOYN", "8807-ARQET", "4468-KAZHE", "2625-TRCZQ", "7721-JXEAW", "1636-NTNCO", "1104-FEJAM", "2636-OHFMN", "2141-RRYGO", "3665-JATSN", "7284-BUYEC", "2041-JIJCI", "9026-LHEVG", "3329-WDIOK", "2187-LZGPL", "6217-TOWGS", "1100-DDVRV", "3669-LVWZB", "7502-BNYGS", "0980-PVMRC", "2969-QWUBZ", "9693-XMUOB", "0212-ISBBF", "5438-QMDDL", "3999-WRNGR", "6778-YSNIH", "0319-QZTCO", "1697-BCSHV", "4628-CTTLA", "2436-QBZFP", "1862-SKORY", "9633-DENPU", "5424-RLQLC", "2931-FSOHN", "6218-KNUBD", "0786-VSSUD", "5948-UJZLF", "4827-USJHP", "8017-UVSZU", "1251-KRREG", "4130-MZLCC", "8229-MYEJZ", "6235-VDHOM", "6543-CPZMK", "1456-TWCGB", "9342-VNIMQ", "0811-GSDTP", "8919-FYFQZ", "3097-NNSPB", "3391-JSQEW", "8791-GFXLZ", "2446-ZKVAF", "8967-SZQAS", "6789-HJBWG", "9992-UJOEL", "6625-UTXEW", "5651-WYIPH", "2586-CWXVV", "5423-BHIXO", "8069-YQQAJ", "7776-QWNFX", "6637-KYRCV", "3723-BFBGR", "8901-HJXTF", "5156-UMKOW", "1247-QBVSH", "7389-KBFIT", "9163-GHAYE", "1322-AGOQM", "1432-FPAXX", "7636-OWBPG", "3082-VQXNH", "5402-HTOTQ", "2108-YKQTY", "0975-VOOVL", "8148-BPLZQ", "3209-ZPKFI", "7579-OOPEC", "8805-JNRAZ", "5816-SCGFC", "7421-ZLUPA", "5404-GGUKR", "3345-PBBFH", "1226-UDFZR", "9415-TPKRV", "7501-VTYLJ", "7740-KKCXF", "2606-RMDHZ", "4353-HYOJD", "1078-TDCRN", "8718-PTMEZ", "1114-CENIM", "3173-NVMPX", "6339-DKLMK", "3873-NFTGI", "3570-YUEKJ", "3538-WZPHD", "7054-ENNGU", "9881-VCZEP", "8654-DHAOW", "7872-RDDLZ", "6048-QBXKL", "3256-EZDBI", "8344-WFMFH", "1395-OFUWC", "1442-BQPVU", "1596-OQSPS", "2843-CQMEG", "6304-IJFSQ", "0094-OIFMO", "9947-OTFQU", "3488-PGMQJ", "7982-VCELR", "6862-CQUMB", "6599-CEBNN", "0111-KLBQG", "7916-VCCPB", "0578-SKVMF", "5949-XIKAE", "6986-IJDHX", "1216-JWVUX", "2189-WWOEW", "3138-BKYAV", "0947-MUGVO", "9944-HKVVB", "1907-UBQFC", "5146-CBVOE", "8584-KMVXD", "5651-YLPRD", "8242-SOQUO", "3733-LSYCE", "9793-WECQC", "5899-OUVKV", "2984-AFWNC", "2761-OCIAX", "8017-LXHFA", "5035-BVCXS", "6407-UTSLV", "5318-IXUZF", "8496-EJAUI", "4143-HHPMK", "0923-PNFUB", "3365-SAIGS", "5989-PGKJB", "8337-MSSXB", "2528-HFYZX", "2135-DQWAQ", "7548-SEPYI", "7503-QQRVF"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "CustomerChurn[customerID]", "count": 500, "min": "0021-IKXGC", "max": "9992-UJOEL"}, {"values": {"label": ["Female", "Male"], "data": [258, 242]}, "label": "CustomerChurn[gender]", "count": 2, "min": "Female", "max": "Male"}, {"values": {"label": ["1", "0"], "data": [102, 398]}, "label": "CustomerChurn[SeniorCitizen]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["1", "0"], "data": [110, 390]}, "label": "CustomerChurn[Partner]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1"], "data": [424, 76]}, "label": "CustomerChurn[Dependents]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["1.0 - 7.6", "7.6 - 14.2", "14.2 - 20.8", "20.8 - 27.4", "27.4 - 34.0", "34.0 - 40.6", "40.6 - 47.2", "47.2 - 53.8", "53.8 - 60.4", "60.4 - 67"], "data": [396, 31, 22, 11, 8, 9, 9, 5, 8, 1]}, "label": "CustomerChurn[tenure]", "count": 10, "min": 1.0, "max": 67}, {"values": {"label": ["1", "0"], "data": [406, 94]}, "label": "CustomerChurn[PhoneService]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["No", "No phone service", "Yes"], "data": [323, 94, 83]}, "label": "CustomerChurn[MultipleLines]", "count": 3, "min": "No", "max": "Yes"}, {"values": {"label": ["Fiber optic", "DSL"], "data": [239, 261]}, "label": "CustomerChurn[InternetService]", "count": 2, "min": "DSL", "max": "Fiber optic"}, {"values": {"label": ["No"], "data": [500]}, "label": "CustomerChurn[OnlineSecurity]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No", "Yes"], "data": [313, 187]}, "label": "CustomerChurn[OnlineBackup]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["No"], "data": [500]}, "label": "CustomerChurn[DeviceProtection]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No"], "data": [500]}, "label": "CustomerChurn[TechSupport]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No", "Yes"], "data": [389, 111]}, "label": "CustomerChurn[StreamingTV]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["No", "Yes"], "data": [394, 106]}, "label": "CustomerChurn[StreamingMovies]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["Month-to-month"], "data": [500]}, "label": "CustomerChurn[Contract]", "count": 1, "min": "Month-to-month", "max": "Month-to-month"}, {"values": {"label": ["1", "0"], "data": [349, 151]}, "label": "CustomerChurn[PaperlessBilling]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["Mailed check", "Electronic check", "Bank transfer (automatic)", "Credit card (automatic)"], "data": [131, 296, 35, 38]}, "label": "CustomerChurn[PaymentMethod]", "count": 4, "min": "Bank transfer (automatic)", "max": "Mailed check"}, {"values": {"label": ["23.0 - 30.7", "30.7 - 38.4", "38.4 - 46.1", "46.1 - 53.8", "53.8 - 61.5", "61.5 - 69.2", "69.2 - 76.9", "76.9 - 84.6", "84.6 - 92.3", "92.3 - 100.0"], "data": [55, 13, 80, 66, 39, 50, 97, 46, 35, 19]}, "label": "CustomerChurn[MonthlyCharges]", "count": 10, "min": 23.0, "max": 100.0}, {"values": {"label": ["23.0 - 454.5", "454.5 - 886.0", "886.0 - 1317.5", "1317.5 - 1749.0", "1749.0 - 2180.5", "2180.5 - 2612.0", "2612.0 - 3043.5", "3043.5 - 3475.0", "3475.0 - 3906.5", "3906.5 - 4338.0"], "data": [406, 27, 17, 19, 8, 8, 6, 4, 3, 2]}, "label": "CustomerChurn[TotalCharges]", "count": 10, "min": 23.0, "max": 4338.0}, {"values": {"label": ["1", "0"], "data": [312, 188]}, "label": "CustomerChurn[Churn]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0.0 - 49.9", "49.9 - 99.8", "99.8 - 149.7", "149.7 - 199.6", "199.6 - 249.5", "249.5 - 299.4", "299.4 - 349.3", "349.3 - 399.2", "399.2 - 449.1", "449.1 - 499.0"], "data": [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]}, "label": "CustomerChurn[customerID]_stringindexer_transform", "count": 10, "min": 0.0, "max": 499.0}, {"values": {"label": ["0", "1"], "data": [258, 242]}, "label": "CustomerChurn[gender]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1", "2"], "data": [323, 94, 83]}, "label": "CustomerChurn[MultipleLines]_stringindexer_transform", "count": 3, "min": "0", "max": "2"}, {"values": {"label": ["1", "0"], "data": [239, 261]}, "label": "CustomerChurn[InternetService]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "CustomerChurn[OnlineSecurity]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0", "1"], "data": [313, 187]}, "label": "CustomerChurn[OnlineBackup]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "CustomerChurn[DeviceProtection]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0"], "data": [500]}, "label": "CustomerChurn[TechSupport]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0", "1"], "data": [389, 111]}, "label": "CustomerChurn[StreamingTV]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1"], "data": [394, 106]}, "label": "CustomerChurn[StreamingMovies]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "CustomerChurn[Contract]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["1", "0", "3", "2"], "data": [131, 296, 35, 38]}, "label": "CustomerChurn[PaymentMethod]_stringindexer_transform", "count": 4, "min": "0", "max": "3"}], "stageId": "64df5f91fc34b1031a5951cb", "FESamplePath": "/FileStore/platform/sampleData/64df5f91fc34b1031a5951cb_AutoFE/part-00000-87dcd529-b558-4e7a-b0b5-425f5f7035fb-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/64df5f91fc34b1031a5951cb_AutoFE/part-00000-87dcd529-b558-4e7a-b0b5-425f5f7035fb-c000.csv", "originalcount": 7043, "graphdata": {"CustomerChurn[customerID]": {"label": ["0390-DCFDQ", "5940-AHUHD", "5583-SXDAG", "4110-PFEUZ", "8040-MNRTF", "1820-TQVEV", "5875-YPQFJ", "7206-GZCDC", "8375-DKEBR", "9804-ICWBG", "8380-PEFPE", "3494-JCHRQ", "8000-REIQB", "8309-IEYJD", "3177-LASXD", "1084-UQCHV", "8051-HJRLT", "0151-ONTOV", "6140-QNRQQ", "1846-XWOQN", "9603-OAIHC", "5186-SAMNZ", "2262-SLNVK", "5539-TMZLF", "7409-KIUTL", "0679-IDSTG", "5542-TBBWB", "1086-LXKFY", "2636-ALXXZ", "1640-PLFMP", "9617-INGJY", "4510-HIMLV", "3878-AVSOQ", "3716-BDVDB", "9488-HGMJH", "0968-GSIKN", "4806-HIPDW", "8644-XLFBW", "0812-WUPTB", "3871-IKPYH", "2920-RNCEZ", "1915-IOFGU", "7665-TOALD", "6416-TVAIH", "3066-RRJIO", "0515-YPMCW", "4603-JANFB", "7908-QCBCA", "7465-ZZRVX", "4702-IOQDC", "3428-XZMAZ", "1853-UDXBW", "5032-MIYKT", "0511-JTEOY", "5134-IKDAY", "5884-GCYMI", "6653-CBBOM", "4759-TRPLW", "8062-YBDOE", "5376-DEQCP", "2506-TNFCO", "2619-WFQWU", "5550-VFRLC", "3244-DCJWY", "8042-JVNFH", "9985-MWVIX", "4871-JTKJF", "3422-LYEPQ", "1363-TXLSL", "4550-EVXNY", "0519-XUZJU", "9605-WGJVW", "7153-OANIO", "0328-GRPMV", "0488-GSLFR", "9728-FTTVZ", "7254-IQWOZ", "2856-HYAPG", "1031-IIDEO", "1062-LHZOD", "1447-GIQMR", "7660-HDPJV", "2446-PLQVO", "4501-EQDRN", "6457-GIRWB", "6502-MJQAE", "1122-JWTJW", "3413-BMNZE", "2135-RXIHG", "6582-OIVSP", "8705-WZCYL", "5522-JBWMO", "9244-ZVAPM", "0887-HJGAR", "6982-SSHFK", "9448-REEVD", "9117-SHLZX", "3165-HDOEW", "5552-ZNFSJ", "2833-SLKDQ", "4237-RLAQD", "1478-VPOAD", "6650-VJONK", "8080-DDEMJ", "8356-WUAOJ", "3669-OYSJI", "1612-EOHDH", "7054-LGEQW", "3961-SXAXY", "3566-HJGPK", "4193-ORFCL", "9828-AOQLM", "7065-YUNRY", "5858-EAFCZ", "1895-QTKDO", "4706-DGAHW", "5103-MHMHY", "4373-VVHQL", "1942-OQFRW", "0415-MOSGF", "4146-SVFUD", "5696-QURRL", "5692-FPTAH", "5133-POWUA", "5077-DXTCG", "7593-XFKDI", "7663-RGWBC", "8950-MTZNV", "8710-YGLWG", "6128-CZOMY", "6185-TASNN", "7825-GKXMW", "2903-YYTBW", "7359-PTSXY", "6959-UWKHF", "8720-RQSBJ", "7754-IXRMC", "2672-OJQZP", "6145-NNPNO", "6595-COKXZ", "8180-AKMJV", "4855-SNKMY", "7252-NTGSS", "2082-CEFLT", "6142-VSJQO", "2275-RBYQS", "1976-CFOCS", "4361-JEIVL", "9214-EKVXR", "0082-LDZUE", "4847-QNOKA", "1963-SVUCV", "6127-IYJOZ", "3085-QUOZK", "3926-CUQZX", "1024-GUALD", "4195-NZGTA", "6366-ZGQGL", "0021-IKXGC", "6158-HDPXZ", "1452-VOQCH", "8372-JUXUI", "3276-HDUEG", "9227-LUNBG", "6513-EECDB", "6358-LYNGM", "7537-RBWEA", "1768-ZAIFU", "3334-CTHOL", "6960-HVYXR", "7767-UXAGJ", "8445-DNBAE", "5240-IJOQT", "0661-XEYAN", "1157-BQCUW", "7442-YGZFK", "5834-ASPWA", "8775-ERLNB", "2538-OIMXF", "9787-XVQIU", "0248-IPDFW", "7180-PISOG", "2672-DZUOY", "2609-IAICY", "3707-GNWHM", "4749-VFKVB", "4102-OQUPX", "2740-TVLFN", "2209-XADXF", "6032-IGALN", "9907-SWKKF", "7365-BVCJH", "4988-IQIGL", "3746-EUBYR", "0612-RTZZA", "8816-VXNZD", "2103-ZRXFN", "9136-ALYBR", "8260-NGFNY", "1833-VGRUM", "1334-FJSVR", "0023-HGHWL", "4729-XKASR", "9058-CBREO", "9895-VFOXH", "2982-IHMFT", "7932-WPTDS", "8473-VUVJN", "2862-PFNIK", "4367-NHWMM", "3797-VTIDR", "1496-GGSUK", "3551-HUAZH", "0616-ATFGB", "3439-GVUSX", "7242-QZLXF", "9248-OJYKK", "4415-IJZTP", "5351-QESIO", "0723-DRCLG", "6894-LFHLY", "3091-FYHKI", "1285-OKIPP", "3583-EKAPL", "9282-IZGQK", "1448-PWKYE", "8603-IJWDN", "0841-NULXI", "5673-FSSMF", "3049-NDXFL", "2018-QKYGT", "9822-OAOVB", "7854-FOKSF", "1740-CSDJP", "4074-SJFFA", "4727-MCYZG", "2004-OCQXK", "0495-RVCBF", "5501-TVMGM", "9124-LHCJQ", "7594-RQHXR", "6086-ESGRL", "5275-SQEIZ", "8945-GRKHX", "1069-XAIEM", "4614-NUVZD", "6629-CZTTH", "5393-RXQSZ", "3841-CONLJ", "3063-QFSZL", "2868-MZAGQ", "2867-UIMSS", "3751-KTZEL", "5909-ECHUI", "6457-USBER", "5919-TMRGD", "2232-DMLXU", "5192-EBGOV", "0970-ETWGE", "3027-ZTDHO", "7294-TMAOP", "7439-DKZTW", "5494-HECPR", "6260-ONULR", "6567-HOOPW", "8580-AECUZ", "0375-HVGXO", "3877-JRJIP", "9497-QCMMS", "9300-RENDD", "3988-RQIXO", "2514-GINMM", "3722-WPXTK", "4910-GMJOT", "2725-KXXWT", "3518-PZXZQ", "4826-XTSOH", "6857-VWJDT", "3801-HMYNL", "1761-AEZZR", "7120-RFMVS", "2386-LAHRK", "8149-RSOUN", "9885-CSMWE", "5178-LMXOP", "7274-RTAPZ", "5960-WPXQM", "6372-RFVNS", "2777-PHDEI", "5797-APWZC", "9019-QVLZD", "1455-ESIQH", "0318-QUUOB", "8740-CRYFY", "9300-AGZNL", "5378-IKEEG", "9725-SCPZG", "7577-SWIFR", "3776-EKTKM", "8058-INTPH", "8821-XNHVZ", "1941-HOSAM", "4273-MBHYA", "7503-ZGUZJ", "4912-PIGUY", "4929-BSTRX", "1415-YFWLT", "9507-EXLTT", "7568-PODML", "6521-YYTYI", "4351-QLCSU", "0674-EYYZV", "0295-PPHDO", "7590-VHVEG", "8665-UTDHZ", "6317-YPKDH", "9514-JDSKI", "6905-NIQIN", "5167-ZFFMM", "9399-APLBT", "2207-NHRJK", "4065-JJAVA", "5868-CZJDR", "7595-EUIVN", "1866-OBPNR", "5054-IEXZT", "0137-OCGAB", "1845-ZLLIG", "1406-PUQVY", "2254-DLXRI", "4317-VTEOA", "6689-KXGBO", "3178-FESZO", "2013-SGDXK", "4274-OWWYO", "3765-JXVKY", "9840-EFJQB", "6907-FLBER", "9752-ZNQUT", "5196-SGOAK", "4844-JJWUY", "1628-BIZYP", "8775-LHDJH", "3296-SILRA", "1977-STDKI", "7493-TPUWZ", "9894-EZEWG", "1471-GIQKQ", "6614-VBEGU", "0823-HSCDJ", "9505-SQFSW", "5073-WXOYN", "8807-ARQET", "4468-KAZHE", "2625-TRCZQ", "7721-JXEAW", "1636-NTNCO", "1104-FEJAM", "2636-OHFMN", "2141-RRYGO", "3665-JATSN", "7284-BUYEC", "2041-JIJCI", "9026-LHEVG", "3329-WDIOK", "2187-LZGPL", "6217-TOWGS", "1100-DDVRV", "3669-LVWZB", "7502-BNYGS", "0980-PVMRC", "2969-QWUBZ", "9693-XMUOB", "0212-ISBBF", "5438-QMDDL", "3999-WRNGR", "6778-YSNIH", "0319-QZTCO", "1697-BCSHV", "4628-CTTLA", "2436-QBZFP", "1862-SKORY", "9633-DENPU", "5424-RLQLC", "2931-FSOHN", "6218-KNUBD", "0786-VSSUD", "5948-UJZLF", "4827-USJHP", "8017-UVSZU", "1251-KRREG", "4130-MZLCC", "8229-MYEJZ", "6235-VDHOM", "6543-CPZMK", "1456-TWCGB", "9342-VNIMQ", "0811-GSDTP", "8919-FYFQZ", "3097-NNSPB", "3391-JSQEW", "8791-GFXLZ", "2446-ZKVAF", "8967-SZQAS", "6789-HJBWG", "9992-UJOEL", "6625-UTXEW", "5651-WYIPH", "2586-CWXVV", "5423-BHIXO", "8069-YQQAJ", "7776-QWNFX", "6637-KYRCV", "3723-BFBGR", "8901-HJXTF", "5156-UMKOW", "1247-QBVSH", "7389-KBFIT", "9163-GHAYE", "1322-AGOQM", "1432-FPAXX", "7636-OWBPG", "3082-VQXNH", "5402-HTOTQ", "2108-YKQTY", "0975-VOOVL", "8148-BPLZQ", "3209-ZPKFI", "7579-OOPEC", "8805-JNRAZ", "5816-SCGFC", "7421-ZLUPA", "5404-GGUKR", "3345-PBBFH", "1226-UDFZR", "9415-TPKRV", "7501-VTYLJ", "7740-KKCXF", "2606-RMDHZ", "4353-HYOJD", "1078-TDCRN", "8718-PTMEZ", "1114-CENIM", "3173-NVMPX", "6339-DKLMK", "3873-NFTGI", "3570-YUEKJ", "3538-WZPHD", "7054-ENNGU", "9881-VCZEP", "8654-DHAOW", "7872-RDDLZ", "6048-QBXKL", "3256-EZDBI", "8344-WFMFH", "1395-OFUWC", "1442-BQPVU", "1596-OQSPS", "2843-CQMEG", "6304-IJFSQ", "0094-OIFMO", "9947-OTFQU", "3488-PGMQJ", "7982-VCELR", "6862-CQUMB", "6599-CEBNN", "0111-KLBQG", "7916-VCCPB", "0578-SKVMF", "5949-XIKAE", "6986-IJDHX", "1216-JWVUX", "2189-WWOEW", "3138-BKYAV", "0947-MUGVO", "9944-HKVVB", "1907-UBQFC", "5146-CBVOE", "8584-KMVXD", "5651-YLPRD", "8242-SOQUO", "3733-LSYCE", "9793-WECQC", "5899-OUVKV", "2984-AFWNC", "2761-OCIAX", "8017-LXHFA", "5035-BVCXS", "6407-UTSLV", "5318-IXUZF", "8496-EJAUI", "4143-HHPMK", "0923-PNFUB", "3365-SAIGS", "5989-PGKJB", "8337-MSSXB", "2528-HFYZX", "2135-DQWAQ", "7548-SEPYI", "7503-QQRVF"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "CustomerChurn[gender]": {"label": ["Female", "Male"], "data": [258, 242]}, "CustomerChurn[SeniorCitizen]": {"label": ["1", "0"], "data": [102, 398]}, "CustomerChurn[Partner]": {"label": ["1", "0"], "data": [110, 390]}, "CustomerChurn[Dependents]": {"label": ["0", "1"], "data": [424, 76]}, "CustomerChurn[tenure]": {"label": ["1.0 - 7.6", "7.6 - 14.2", "14.2 - 20.8", "20.8 - 27.4", "27.4 - 34.0", "34.0 - 40.6", "40.6 - 47.2", "47.2 - 53.8", "53.8 - 60.4", "60.4 - 67"], "data": [396, 31, 22, 11, 8, 9, 9, 5, 8, 1]}, "CustomerChurn[PhoneService]": {"label": ["1", "0"], "data": [406, 94]}, "CustomerChurn[MultipleLines]": {"label": ["No", "No phone service", "Yes"], "data": [323, 94, 83]}, "CustomerChurn[InternetService]": {"label": ["Fiber optic", "DSL"], "data": [239, 261]}, "CustomerChurn[OnlineSecurity]": {"label": ["No"], "data": [500]}, "CustomerChurn[OnlineBackup]": {"label": ["No", "Yes"], "data": [313, 187]}, "CustomerChurn[DeviceProtection]": {"label": ["No"], "data": [500]}, "CustomerChurn[TechSupport]": {"label": ["No"], "data": [500]}, "CustomerChurn[StreamingTV]": {"label": ["No", "Yes"], "data": [389, 111]}, "CustomerChurn[StreamingMovies]": {"label": ["No", "Yes"], "data": [394, 106]}, "CustomerChurn[Contract]": {"label": ["Month-to-month"], "data": [500]}, "CustomerChurn[PaperlessBilling]": {"label": ["1", "0"], "data": [349, 151]}, "CustomerChurn[PaymentMethod]": {"label": ["Mailed check", "Electronic check", "Bank transfer (automatic)", "Credit card (automatic)"], "data": [131, 296, 35, 38]}, "CustomerChurn[MonthlyCharges]": {"label": ["23.0 - 30.7", "30.7 - 38.4", "38.4 - 46.1", "46.1 - 53.8", "53.8 - 61.5", "61.5 - 69.2", "69.2 - 76.9", "76.9 - 84.6", "84.6 - 92.3", "92.3 - 100.0"], "data": [55, 13, 80, 66, 39, 50, 97, 46, 35, 19]}, "CustomerChurn[TotalCharges]": {"label": ["23.0 - 454.5", "454.5 - 886.0", "886.0 - 1317.5", "1317.5 - 1749.0", "1749.0 - 2180.5", "2180.5 - 2612.0", "2612.0 - 3043.5", "3043.5 - 3475.0", "3475.0 - 3906.5", "3906.5 - 4338.0"], "data": [406, 27, 17, 19, 8, 8, 6, 4, 3, 2]}, "CustomerChurn[Churn]": {"label": ["1", "0"], "data": [312, 188]}, "CustomerChurn[customerID]_stringindexer_transform": {"label": ["0.0 - 49.9", "49.9 - 99.8", "99.8 - 149.7", "149.7 - 199.6", "199.6 - 249.5", "249.5 - 299.4", "299.4 - 349.3", "349.3 - 399.2", "399.2 - 449.1", "449.1 - 499.0"], "data": [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]}, "CustomerChurn[gender]_stringindexer_transform": {"label": ["0", "1"], "data": [258, 242]}, "CustomerChurn[MultipleLines]_stringindexer_transform": {"label": ["0", "1", "2"], "data": [323, 94, 83]}, "CustomerChurn[InternetService]_stringindexer_transform": {"label": ["1", "0"], "data": [239, 261]}, "CustomerChurn[OnlineSecurity]_stringindexer_transform": {"label": ["0"], "data": [500]}, "CustomerChurn[OnlineBackup]_stringindexer_transform": {"label": ["0", "1"], "data": [313, 187]}, "CustomerChurn[DeviceProtection]_stringindexer_transform": {"label": ["0"], "data": [500]}, "CustomerChurn[TechSupport]_stringindexer_transform": {"label": ["0"], "data": [500]}, "CustomerChurn[StreamingTV]_stringindexer_transform": {"label": ["0", "1"], "data": [389, 111]}, "CustomerChurn[StreamingMovies]_stringindexer_transform": {"label": ["0", "1"], "data": [394, 106]}, "CustomerChurn[Contract]_stringindexer_transform": {"label": ["0"], "data": [500]}, "CustomerChurn[PaymentMethod]_stringindexer_transform": {"label": ["1", "0", "3", "2"], "data": [131, 296, 35, 38]}}}, "ManualFE": {"FE": [{"transformationsData": [{"feature_label": "CustomerChurn[customerID]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[customerID]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "0021-IKXGC", "max": "9992-UJOEL", "missing": "0", "distinct": "500"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[customerID]"}, {"transformationsData": [{"feature_label": "CustomerChurn[gender]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[gender]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Female", "max": "Male", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[gender]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[SeniorCitizen]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.2", "stddev": "0.4", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[SeniorCitiz..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Partner]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.22", "stddev": "0.41", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Partner]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Dependents]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.15", "stddev": "0.36", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Dependents]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[tenure]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "6.53", "stddev": "12.57", "min": "1", "max": "67", "missing": "0"}, "updatedLabel": "CustomerChurn[tenure]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[PhoneService]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.81", "stddev": "0.39", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[PhoneServic..."}, {"transformationsData": [{"feature_label": "CustomerChurn[MultipleLines]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[MultipleLines]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "3"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[MultipleLin..."}, {"transformationsData": [{"feature_label": "CustomerChurn[InternetService]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[InternetService]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "DSL", "max": "Fiber optic", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[InternetSer..."}, {"transformationsData": [{"feature_label": "CustomerChurn[OnlineSecurity]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[OnlineSecurity]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[OnlineSecur..."}, {"transformationsData": [{"feature_label": "CustomerChurn[OnlineBackup]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[OnlineBackup]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[OnlineBacku..."}, {"transformationsData": [{"feature_label": "CustomerChurn[DeviceProtection]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[DeviceProtection]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[DeviceProte..."}, {"transformationsData": [{"feature_label": "CustomerChurn[TechSupport]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[TechSupport]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[TechSupport..."}, {"transformationsData": [{"feature_label": "CustomerChurn[StreamingTV]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[StreamingTV]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[StreamingTV..."}, {"transformationsData": [{"feature_label": "CustomerChurn[StreamingMovies]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[StreamingMovies]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[StreamingMo..."}, {"transformationsData": [{"feature_label": "CustomerChurn[Contract]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[Contract]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Month-to-month", "max": "Month-to-month", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[Contract]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[PaperlessBilling]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.7", "stddev": "0.46", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[PaperlessBi..."}, {"transformationsData": [{"feature_label": "CustomerChurn[PaymentMethod]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[PaymentMethod]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Bank transfer (automatic)", "max": "Mailed check", "missing": "0", "distinct": "4"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[PaymentMeth..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[MonthlyCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "60.22", "stddev": "19.34", "min": "23.45", "max": "100.25", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[MonthlyChar..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[TotalCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "370.74", "stddev": "721.08", "min": "23.45", "max": "4338.6", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[TotalCharge..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Churn]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.62", "stddev": "0.48", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Churn]"}, {"feature": "CustomerChurn[customerID]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "249.5", "stddev": "144.48", "min": "0.0", "max": "499.0", "missing": "0"}, "updatedLabel": "CustomerChurn[customerID]..."}, {"feature": "CustomerChurn[gender]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.48", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[gender]_str..."}, {"feature": "CustomerChurn[MultipleLines]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.52", "stddev": "0.76", "min": "0", "max": "2", "missing": "0"}, "updatedLabel": "CustomerChurn[MultipleLin..."}, {"feature": "CustomerChurn[InternetService]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.48", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[InternetSer..."}, {"feature": "CustomerChurn[OnlineSecurity]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "CustomerChurn[OnlineSecur..."}, {"feature": "CustomerChurn[OnlineBackup]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.37", "stddev": "0.48", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[OnlineBacku..."}, {"feature": "CustomerChurn[DeviceProtection]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "CustomerChurn[DeviceProte..."}, {"feature": "CustomerChurn[TechSupport]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "CustomerChurn[TechSupport..."}, {"feature": "CustomerChurn[StreamingTV]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.22", "stddev": "0.42", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[StreamingTV..."}, {"feature": "CustomerChurn[StreamingMovies]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.21", "stddev": "0.41", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[StreamingMo..."}, {"feature": "CustomerChurn[Contract]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "CustomerChurn[Contract]_s..."}, {"feature": "CustomerChurn[PaymentMethod]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.62", "stddev": "0.9", "min": "0", "max": "3", "missing": "0"}, "updatedLabel": "CustomerChurn[PaymentMeth..."}], "message": "Successfully executed", "status": 1, "userid": "15431221-f3af-496e-83cd-2ef74ecb4fcc", "autoFE_flag": true, "stageId": "64df5f91fc34b1031a5951cb", "FESamplePath": "/FileStore/platform/sampleData/64df5f91fc34b1031a5951cb_AutoFE/part-00000-87dcd529-b558-4e7a-b0b5-425f5f7035fb-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/64df5f91fc34b1031a5951cb_AutoFE/part-00000-87dcd529-b558-4e7a-b0b5-425f5f7035fb-c000.csv", "samplecount": 500, "originalcount": 7043, "dataPercentage": "100", "FEGraph": [{"values": {"label": ["0390-DCFDQ", "5940-AHUHD", "5583-SXDAG", "4110-PFEUZ", "8040-MNRTF", "1820-TQVEV", "5875-YPQFJ", "7206-GZCDC", "8375-DKEBR", "9804-ICWBG", "8380-PEFPE", "3494-JCHRQ", "8000-REIQB", "8309-IEYJD", "3177-LASXD", "1084-UQCHV", "8051-HJRLT", "0151-ONTOV", "6140-QNRQQ", "1846-XWOQN", "9603-OAIHC", "5186-SAMNZ", "2262-SLNVK", "5539-TMZLF", "7409-KIUTL", "0679-IDSTG", "5542-TBBWB", "1086-LXKFY", "2636-ALXXZ", "1640-PLFMP", "9617-INGJY", "4510-HIMLV", "3878-AVSOQ", "3716-BDVDB", "9488-HGMJH", "0968-GSIKN", "4806-HIPDW", "8644-XLFBW", "0812-WUPTB", "3871-IKPYH", "2920-RNCEZ", "1915-IOFGU", "7665-TOALD", "6416-TVAIH", "3066-RRJIO", "0515-YPMCW", "4603-JANFB", "7908-QCBCA", "7465-ZZRVX", "4702-IOQDC", "3428-XZMAZ", "1853-UDXBW", "5032-MIYKT", "0511-JTEOY", "5134-IKDAY", "5884-GCYMI", "6653-CBBOM", "4759-TRPLW", "8062-YBDOE", "5376-DEQCP", "2506-TNFCO", "2619-WFQWU", "5550-VFRLC", "3244-DCJWY", "8042-JVNFH", "9985-MWVIX", "4871-JTKJF", "3422-LYEPQ", "1363-TXLSL", "4550-EVXNY", "0519-XUZJU", "9605-WGJVW", "7153-OANIO", "0328-GRPMV", "0488-GSLFR", "9728-FTTVZ", "7254-IQWOZ", "2856-HYAPG", "1031-IIDEO", "1062-LHZOD", "1447-GIQMR", "7660-HDPJV", "2446-PLQVO", "4501-EQDRN", "6457-GIRWB", "6502-MJQAE", "1122-JWTJW", "3413-BMNZE", "2135-RXIHG", "6582-OIVSP", "8705-WZCYL", "5522-JBWMO", "9244-ZVAPM", "0887-HJGAR", "6982-SSHFK", "9448-REEVD", "9117-SHLZX", "3165-HDOEW", "5552-ZNFSJ", "2833-SLKDQ", "4237-RLAQD", "1478-VPOAD", "6650-VJONK", "8080-DDEMJ", "8356-WUAOJ", "3669-OYSJI", "1612-EOHDH", "7054-LGEQW", "3961-SXAXY", "3566-HJGPK", "4193-ORFCL", "9828-AOQLM", "7065-YUNRY", "5858-EAFCZ", "1895-QTKDO", "4706-DGAHW", "5103-MHMHY", "4373-VVHQL", "1942-OQFRW", "0415-MOSGF", "4146-SVFUD", "5696-QURRL", "5692-FPTAH", "5133-POWUA", "5077-DXTCG", "7593-XFKDI", "7663-RGWBC", "8950-MTZNV", "8710-YGLWG", "6128-CZOMY", "6185-TASNN", "7825-GKXMW", "2903-YYTBW", "7359-PTSXY", "6959-UWKHF", "8720-RQSBJ", "7754-IXRMC", "2672-OJQZP", "6145-NNPNO", "6595-COKXZ", "8180-AKMJV", "4855-SNKMY", "7252-NTGSS", "2082-CEFLT", "6142-VSJQO", "2275-RBYQS", "1976-CFOCS", "4361-JEIVL", "9214-EKVXR", "0082-LDZUE", "4847-QNOKA", "1963-SVUCV", "6127-IYJOZ", "3085-QUOZK", "3926-CUQZX", "1024-GUALD", "4195-NZGTA", "6366-ZGQGL", "0021-IKXGC", "6158-HDPXZ", "1452-VOQCH", "8372-JUXUI", "3276-HDUEG", "9227-LUNBG", "6513-EECDB", "6358-LYNGM", "7537-RBWEA", "1768-ZAIFU", "3334-CTHOL", "6960-HVYXR", "7767-UXAGJ", "8445-DNBAE", "5240-IJOQT", "0661-XEYAN", "1157-BQCUW", "7442-YGZFK", "5834-ASPWA", "8775-ERLNB", "2538-OIMXF", "9787-XVQIU", "0248-IPDFW", "7180-PISOG", "2672-DZUOY", "2609-IAICY", "3707-GNWHM", "4749-VFKVB", "4102-OQUPX", "2740-TVLFN", "2209-XADXF", "6032-IGALN", "9907-SWKKF", "7365-BVCJH", "4988-IQIGL", "3746-EUBYR", "0612-RTZZA", "8816-VXNZD", "2103-ZRXFN", "9136-ALYBR", "8260-NGFNY", "1833-VGRUM", "1334-FJSVR", "0023-HGHWL", "4729-XKASR", "9058-CBREO", "9895-VFOXH", "2982-IHMFT", "7932-WPTDS", "8473-VUVJN", "2862-PFNIK", "4367-NHWMM", "3797-VTIDR", "1496-GGSUK", "3551-HUAZH", "0616-ATFGB", "3439-GVUSX", "7242-QZLXF", "9248-OJYKK", "4415-IJZTP", "5351-QESIO", "0723-DRCLG", "6894-LFHLY", "3091-FYHKI", "1285-OKIPP", "3583-EKAPL", "9282-IZGQK", "1448-PWKYE", "8603-IJWDN", "0841-NULXI", "5673-FSSMF", "3049-NDXFL", "2018-QKYGT", "9822-OAOVB", "7854-FOKSF", "1740-CSDJP", "4074-SJFFA", "4727-MCYZG", "2004-OCQXK", "0495-RVCBF", "5501-TVMGM", "9124-LHCJQ", "7594-RQHXR", "6086-ESGRL", "5275-SQEIZ", "8945-GRKHX", "1069-XAIEM", "4614-NUVZD", "6629-CZTTH", "5393-RXQSZ", "3841-CONLJ", "3063-QFSZL", "2868-MZAGQ", "2867-UIMSS", "3751-KTZEL", "5909-ECHUI", "6457-USBER", "5919-TMRGD", "2232-DMLXU", "5192-EBGOV", "0970-ETWGE", "3027-ZTDHO", "7294-TMAOP", "7439-DKZTW", "5494-HECPR", "6260-ONULR", "6567-HOOPW", "8580-AECUZ", "0375-HVGXO", "3877-JRJIP", "9497-QCMMS", "9300-RENDD", "3988-RQIXO", "2514-GINMM", "3722-WPXTK", "4910-GMJOT", "2725-KXXWT", "3518-PZXZQ", "4826-XTSOH", "6857-VWJDT", "3801-HMYNL", "1761-AEZZR", "7120-RFMVS", "2386-LAHRK", "8149-RSOUN", "9885-CSMWE", "5178-LMXOP", "7274-RTAPZ", "5960-WPXQM", "6372-RFVNS", "2777-PHDEI", "5797-APWZC", "9019-QVLZD", "1455-ESIQH", "0318-QUUOB", "8740-CRYFY", "9300-AGZNL", "5378-IKEEG", "9725-SCPZG", "7577-SWIFR", "3776-EKTKM", "8058-INTPH", "8821-XNHVZ", "1941-HOSAM", "4273-MBHYA", "7503-ZGUZJ", "4912-PIGUY", "4929-BSTRX", "1415-YFWLT", "9507-EXLTT", "7568-PODML", "6521-YYTYI", "4351-QLCSU", "0674-EYYZV", "0295-PPHDO", "7590-VHVEG", "8665-UTDHZ", "6317-YPKDH", "9514-JDSKI", "6905-NIQIN", "5167-ZFFMM", "9399-APLBT", "2207-NHRJK", "4065-JJAVA", "5868-CZJDR", "7595-EUIVN", "1866-OBPNR", "5054-IEXZT", "0137-OCGAB", "1845-ZLLIG", "1406-PUQVY", "2254-DLXRI", "4317-VTEOA", "6689-KXGBO", "3178-FESZO", "2013-SGDXK", "4274-OWWYO", "3765-JXVKY", "9840-EFJQB", "6907-FLBER", "9752-ZNQUT", "5196-SGOAK", "4844-JJWUY", "1628-BIZYP", "8775-LHDJH", "3296-SILRA", "1977-STDKI", "7493-TPUWZ", "9894-EZEWG", "1471-GIQKQ", "6614-VBEGU", "0823-HSCDJ", "9505-SQFSW", "5073-WXOYN", "8807-ARQET", "4468-KAZHE", "2625-TRCZQ", "7721-JXEAW", "1636-NTNCO", "1104-FEJAM", "2636-OHFMN", "2141-RRYGO", "3665-JATSN", "7284-BUYEC", "2041-JIJCI", "9026-LHEVG", "3329-WDIOK", "2187-LZGPL", "6217-TOWGS", "1100-DDVRV", "3669-LVWZB", "7502-BNYGS", "0980-PVMRC", "2969-QWUBZ", "9693-XMUOB", "0212-ISBBF", "5438-QMDDL", "3999-WRNGR", "6778-YSNIH", "0319-QZTCO", "1697-BCSHV", "4628-CTTLA", "2436-QBZFP", "1862-SKORY", "9633-DENPU", "5424-RLQLC", "2931-FSOHN", "6218-KNUBD", "0786-VSSUD", "5948-UJZLF", "4827-USJHP", "8017-UVSZU", "1251-KRREG", "4130-MZLCC", "8229-MYEJZ", "6235-VDHOM", "6543-CPZMK", "1456-TWCGB", "9342-VNIMQ", "0811-GSDTP", "8919-FYFQZ", "3097-NNSPB", "3391-JSQEW", "8791-GFXLZ", "2446-ZKVAF", "8967-SZQAS", "6789-HJBWG", "9992-UJOEL", "6625-UTXEW", "5651-WYIPH", "2586-CWXVV", "5423-BHIXO", "8069-YQQAJ", "7776-QWNFX", "6637-KYRCV", "3723-BFBGR", "8901-HJXTF", "5156-UMKOW", "1247-QBVSH", "7389-KBFIT", "9163-GHAYE", "1322-AGOQM", "1432-FPAXX", "7636-OWBPG", "3082-VQXNH", "5402-HTOTQ", "2108-YKQTY", "0975-VOOVL", "8148-BPLZQ", "3209-ZPKFI", "7579-OOPEC", "8805-JNRAZ", "5816-SCGFC", "7421-ZLUPA", "5404-GGUKR", "3345-PBBFH", "1226-UDFZR", "9415-TPKRV", "7501-VTYLJ", "7740-KKCXF", "2606-RMDHZ", "4353-HYOJD", "1078-TDCRN", "8718-PTMEZ", "1114-CENIM", "3173-NVMPX", "6339-DKLMK", "3873-NFTGI", "3570-YUEKJ", "3538-WZPHD", "7054-ENNGU", "9881-VCZEP", "8654-DHAOW", "7872-RDDLZ", "6048-QBXKL", "3256-EZDBI", "8344-WFMFH", "1395-OFUWC", "1442-BQPVU", "1596-OQSPS", "2843-CQMEG", "6304-IJFSQ", "0094-OIFMO", "9947-OTFQU", "3488-PGMQJ", "7982-VCELR", "6862-CQUMB", "6599-CEBNN", "0111-KLBQG", "7916-VCCPB", "0578-SKVMF", "5949-XIKAE", "6986-IJDHX", "1216-JWVUX", "2189-WWOEW", "3138-BKYAV", "0947-MUGVO", "9944-HKVVB", "1907-UBQFC", "5146-CBVOE", "8584-KMVXD", "5651-YLPRD", "8242-SOQUO", "3733-LSYCE", "9793-WECQC", "5899-OUVKV", "2984-AFWNC", "2761-OCIAX", "8017-LXHFA", "5035-BVCXS", "6407-UTSLV", "5318-IXUZF", "8496-EJAUI", "4143-HHPMK", "0923-PNFUB", "3365-SAIGS", "5989-PGKJB", "8337-MSSXB", "2528-HFYZX", "2135-DQWAQ", "7548-SEPYI", "7503-QQRVF"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "CustomerChurn[customerID]", "count": 500, "min": "0021-IKXGC", "max": "9992-UJOEL"}, {"values": {"label": ["Female", "Male"], "data": [258, 242]}, "label": "CustomerChurn[gender]", "count": 2, "min": "Female", "max": "Male"}, {"values": {"label": ["1", "0"], "data": [102, 398]}, "label": "CustomerChurn[SeniorCitizen]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["1", "0"], "data": [110, 390]}, "label": "CustomerChurn[Partner]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1"], "data": [424, 76]}, "label": "CustomerChurn[Dependents]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["1.0 - 7.6", "7.6 - 14.2", "14.2 - 20.8", "20.8 - 27.4", "27.4 - 34.0", "34.0 - 40.6", "40.6 - 47.2", "47.2 - 53.8", "53.8 - 60.4", "60.4 - 67"], "data": [396, 31, 22, 11, 8, 9, 9, 5, 8, 1]}, "label": "CustomerChurn[tenure]", "count": 10, "min": 1.0, "max": 67}, {"values": {"label": ["1", "0"], "data": [406, 94]}, "label": "CustomerChurn[PhoneService]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["No", "No phone service", "Yes"], "data": [323, 94, 83]}, "label": "CustomerChurn[MultipleLines]", "count": 3, "min": "No", "max": "Yes"}, {"values": {"label": ["Fiber optic", "DSL"], "data": [239, 261]}, "label": "CustomerChurn[InternetService]", "count": 2, "min": "DSL", "max": "Fiber optic"}, {"values": {"label": ["No"], "data": [500]}, "label": "CustomerChurn[OnlineSecurity]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No", "Yes"], "data": [313, 187]}, "label": "CustomerChurn[OnlineBackup]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["No"], "data": [500]}, "label": "CustomerChurn[DeviceProtection]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No"], "data": [500]}, "label": "CustomerChurn[TechSupport]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No", "Yes"], "data": [389, 111]}, "label": "CustomerChurn[StreamingTV]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["No", "Yes"], "data": [394, 106]}, "label": "CustomerChurn[StreamingMovies]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["Month-to-month"], "data": [500]}, "label": "CustomerChurn[Contract]", "count": 1, "min": "Month-to-month", "max": "Month-to-month"}, {"values": {"label": ["1", "0"], "data": [349, 151]}, "label": "CustomerChurn[PaperlessBilling]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["Mailed check", "Electronic check", "Bank transfer (automatic)", "Credit card (automatic)"], "data": [131, 296, 35, 38]}, "label": "CustomerChurn[PaymentMethod]", "count": 4, "min": "Bank transfer (automatic)", "max": "Mailed check"}, {"values": {"label": ["23.0 - 30.7", "30.7 - 38.4", "38.4 - 46.1", "46.1 - 53.8", "53.8 - 61.5", "61.5 - 69.2", "69.2 - 76.9", "76.9 - 84.6", "84.6 - 92.3", "92.3 - 100.0"], "data": [55, 13, 80, 66, 39, 50, 97, 46, 35, 19]}, "label": "CustomerChurn[MonthlyCharges]", "count": 10, "min": 23.0, "max": 100.0}, {"values": {"label": ["23.0 - 454.5", "454.5 - 886.0", "886.0 - 1317.5", "1317.5 - 1749.0", "1749.0 - 2180.5", "2180.5 - 2612.0", "2612.0 - 3043.5", "3043.5 - 3475.0", "3475.0 - 3906.5", "3906.5 - 4338.0"], "data": [406, 27, 17, 19, 8, 8, 6, 4, 3, 2]}, "label": "CustomerChurn[TotalCharges]", "count": 10, "min": 23.0, "max": 4338.0}, {"values": {"label": ["1", "0"], "data": [312, 188]}, "label": "CustomerChurn[Churn]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0.0 - 49.9", "49.9 - 99.8", "99.8 - 149.7", "149.7 - 199.6", "199.6 - 249.5", "249.5 - 299.4", "299.4 - 349.3", "349.3 - 399.2", "399.2 - 449.1", "449.1 - 499.0"], "data": [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]}, "label": "CustomerChurn[customerID]_stringindexer_transform", "count": 10, "min": 0.0, "max": 499.0}, {"values": {"label": ["0", "1"], "data": [258, 242]}, "label": "CustomerChurn[gender]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1", "2"], "data": [323, 94, 83]}, "label": "CustomerChurn[MultipleLines]_stringindexer_transform", "count": 3, "min": "0", "max": "2"}, {"values": {"label": ["1", "0"], "data": [239, 261]}, "label": "CustomerChurn[InternetService]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "CustomerChurn[OnlineSecurity]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0", "1"], "data": [313, 187]}, "label": "CustomerChurn[OnlineBackup]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "CustomerChurn[DeviceProtection]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0"], "data": [500]}, "label": "CustomerChurn[TechSupport]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0", "1"], "data": [389, 111]}, "label": "CustomerChurn[StreamingTV]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1"], "data": [394, 106]}, "label": "CustomerChurn[StreamingMovies]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "CustomerChurn[Contract]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["1", "0", "3", "2"], "data": [131, 296, 35, 38]}, "label": "CustomerChurn[PaymentMethod]_stringindexer_transform", "count": 4, "min": "0", "max": "3"}]}, "selectedFE": [{"transformationsData": [{"feature_label": "CustomerChurn[customerID]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[customerID]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "0021-IKXGC", "max": "9992-UJOEL", "missing": "0", "distinct": "500"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[customerID]"}, {"transformationsData": [{"feature_label": "CustomerChurn[gender]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[gender]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Female", "max": "Male", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[gender]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[SeniorCitizen]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.2", "stddev": "0.4", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[SeniorCitiz..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Partner]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.22", "stddev": "0.41", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Partner]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Dependents]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.15", "stddev": "0.36", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Dependents]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[tenure]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "6.53", "stddev": "12.57", "min": "1", "max": "67", "missing": "0"}, "updatedLabel": "CustomerChurn[tenure]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[PhoneService]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.81", "stddev": "0.39", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[PhoneServic..."}, {"transformationsData": [{"feature_label": "CustomerChurn[MultipleLines]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[MultipleLines]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "3"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[MultipleLin..."}, {"transformationsData": [{"feature_label": "CustomerChurn[InternetService]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[InternetService]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "DSL", "max": "Fiber optic", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[InternetSer..."}, {"transformationsData": [{"feature_label": "CustomerChurn[OnlineSecurity]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[OnlineSecurity]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[OnlineSecur..."}, {"transformationsData": [{"feature_label": "CustomerChurn[OnlineBackup]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[OnlineBackup]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[OnlineBacku..."}, {"transformationsData": [{"feature_label": "CustomerChurn[DeviceProtection]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[DeviceProtection]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[DeviceProte..."}, {"transformationsData": [{"feature_label": "CustomerChurn[TechSupport]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[TechSupport]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[TechSupport..."}, {"transformationsData": [{"feature_label": "CustomerChurn[StreamingTV]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[StreamingTV]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[StreamingTV..."}, {"transformationsData": [{"feature_label": "CustomerChurn[StreamingMovies]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[StreamingMovies]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[StreamingMo..."}, {"transformationsData": [{"feature_label": "CustomerChurn[Contract]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[Contract]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Month-to-month", "max": "Month-to-month", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[Contract]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[PaperlessBilling]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.7", "stddev": "0.46", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[PaperlessBi..."}, {"transformationsData": [{"feature_label": "CustomerChurn[PaymentMethod]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[PaymentMethod]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Bank transfer (automatic)", "max": "Mailed check", "missing": "0", "distinct": "4"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[PaymentMeth..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[MonthlyCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "60.22", "stddev": "19.34", "min": "23.45", "max": "100.25", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[MonthlyChar..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[TotalCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "370.74", "stddev": "721.08", "min": "23.45", "max": "4338.6", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[TotalCharge..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Churn]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.62", "stddev": "0.48", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Churn]"}], "autoFE_flag": true, "modeltrainingpercent": "100"}, "status": "new", "position": {"x": 62, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/transformation/feature-transformation.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "transformation", "text": "Auto FE", "slug": "auto-fe", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "10"}, "ManualFE": {"FE": []}, "selectedFE": [], "autoFE_flag": true}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "15431221-f3af-496e-83cd-2ef74ecb4fcc", "original_schema": [{"inherited": true, "checked": true, "field": "CustomerChurn[SeniorCitizen]", "alias": "CustomerChurn[SeniorCitizen]", "type": "numeric", "position": 0}, {"inherited": true, "checked": true, "field": "CustomerChurn[Partner]", "alias": "CustomerChurn[Partner]", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "CustomerChurn[Dependents]", "alias": "CustomerChurn[Dependents]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "CustomerChurn[tenure]", "alias": "CustomerChurn[tenure]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "CustomerChurn[PhoneService]", "alias": "CustomerChurn[PhoneService]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaperlessBilling]", "alias": "CustomerChurn[PaperlessBilling]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "CustomerChurn[MonthlyCharges]", "alias": "CustomerChurn[MonthlyCharges]", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "CustomerChurn[TotalCharges]", "alias": "CustomerChurn[TotalCharges]", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "CustomerChurn[Churn]", "alias": "CustomerChurn[Churn]", "type": "numeric", "position": 8}, {"inherited": true, "checked": true, "field": "CustomerChurn[customerID]_stringindexer", "alias": "CustomerChurn[customerID]_stringindexer", "type": "real", "position": 9}, {"inherited": true, "checked": true, "field": "CustomerChurn[gender]_stringindexer", "alias": "CustomerChurn[gender]_stringindexer", "type": "numeric", "position": 10}, {"inherited": true, "checked": true, "field": "CustomerChurn[MultipleLines]_stringindexer", "alias": "CustomerChurn[MultipleLines]_stringindexer", "type": "numeric", "position": 11}, {"inherited": true, "checked": true, "field": "CustomerChurn[InternetService]_stringindexer", "alias": "CustomerChurn[InternetService]_stringindexer", "type": "numeric", "position": 12}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineSecurity]_stringindexer", "alias": "CustomerChurn[OnlineSecurity]_stringindexer", "type": "numeric", "position": 13}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineBackup]_stringindexer", "alias": "CustomerChurn[OnlineBackup]_stringindexer", "type": "numeric", "position": 14}, {"inherited": true, "checked": true, "field": "CustomerChurn[DeviceProtection]_stringindexer", "alias": "CustomerChurn[DeviceProtection]_stringindexer", "type": "numeric", "position": 15}, {"inherited": true, "checked": true, "field": "CustomerChurn[TechSupport]_stringindexer", "alias": "CustomerChurn[TechSupport]_stringindexer", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingTV]_stringindexer", "alias": "CustomerChurn[StreamingTV]_stringindexer", "type": "numeric", "position": 17}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingMovies]_stringindexer", "alias": "CustomerChurn[StreamingMovies]_stringindexer", "type": "numeric", "position": 18}, {"inherited": true, "checked": true, "field": "CustomerChurn[Contract]_stringindexer", "alias": "CustomerChurn[Contract]_stringindexer", "type": "numeric", "position": 19}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaymentMethod]_stringindexer", "alias": "CustomerChurn[PaymentMethod]_stringindexer", "type": "numeric", "position": 20}], "actual_schema": [{"inherited": true, "checked": true, "field": "CustomerChurn[customerID]", "alias": "CustomerChurn[customerID]", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "CustomerChurn[gender]", "alias": "CustomerChurn[gender]", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "CustomerChurn[SeniorCitizen]", "alias": "CustomerChurn[SeniorCitizen]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "CustomerChurn[Partner]", "alias": "CustomerChurn[Partner]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "CustomerChurn[Dependents]", "alias": "CustomerChurn[Dependents]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "CustomerChurn[tenure]", "alias": "CustomerChurn[tenure]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "CustomerChurn[PhoneService]", "alias": "CustomerChurn[PhoneService]", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "CustomerChurn[MultipleLines]", "alias": "CustomerChurn[MultipleLines]", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "CustomerChurn[InternetService]", "alias": "CustomerChurn[InternetService]", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineSecurity]", "alias": "CustomerChurn[OnlineSecurity]", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineBackup]", "alias": "CustomerChurn[OnlineBackup]", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "CustomerChurn[DeviceProtection]", "alias": "CustomerChurn[DeviceProtection]", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "CustomerChurn[TechSupport]", "alias": "CustomerChurn[TechSupport]", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingTV]", "alias": "CustomerChurn[StreamingTV]", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingMovies]", "alias": "CustomerChurn[StreamingMovies]", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "CustomerChurn[Contract]", "alias": "CustomerChurn[Contract]", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaperlessBilling]", "alias": "CustomerChurn[PaperlessBilling]", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaymentMethod]", "alias": "CustomerChurn[PaymentMethod]", "type": "String", "position": 17}, {"inherited": true, "checked": true, "field": "CustomerChurn[MonthlyCharges]", "alias": "CustomerChurn[MonthlyCharges]", "type": "real", "position": 18}, {"inherited": true, "checked": true, "field": "CustomerChurn[TotalCharges]", "alias": "CustomerChurn[TotalCharges]", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "CustomerChurn[Churn]", "alias": "CustomerChurn[Churn]", "type": "numeric", "position": 20}], "selected_schema": [], "created_at": "2023-08-18 12:09:53.043000", "originalcount": 7043, "samplecount": 719, "samplefile": "/FileStore/platform/sampleData/64df5f91fc34b1031a5951ca/part-00000-0db51ac6-a35f-48ab-b08d-924c6a6e96b6-c000.csv", "joinSchema": [], "updated_at": "2023-08-18 12:09:53.047000", "__v": 0, "datacache": 0, "sampleData": [{"CustomerChurn[customerID]": "0390-DCFDQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.45, "CustomerChurn[TotalCharges]": 70.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7206-GZCDC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.25, "CustomerChurn[TotalCharges]": 69.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5542-TBBWB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.9, "CustomerChurn[TotalCharges]": 69.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4510-HIMLV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.8, "CustomerChurn[TotalCharges]": 69.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7908-QCBCA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.4, "CustomerChurn[TotalCharges]": 69.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5032-MIYKT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.7, "CustomerChurn[TotalCharges]": 70.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2856-HYAPG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 68.65, "CustomerChurn[TotalCharges]": 68.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1062-LHZOD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.9, "CustomerChurn[TotalCharges]": 69.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1122-JWTJW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.65, "CustomerChurn[TotalCharges]": 70.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6582-OIVSP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.3, "CustomerChurn[TotalCharges]": 45.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9244-ZVAPM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.6, "CustomerChurn[TotalCharges]": 45.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2833-SLKDQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.05, "CustomerChurn[TotalCharges]": 45.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6650-VJONK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 43.85, "CustomerChurn[TotalCharges]": 43.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1612-EOHDH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.15, "CustomerChurn[TotalCharges]": 45.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0415-MOSGF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.4, "CustomerChurn[TotalCharges]": 44.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7593-XFKDI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 46.3, "CustomerChurn[TotalCharges]": 46.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7663-RGWBC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.15, "CustomerChurn[TotalCharges]": 44.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8710-YGLWG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.9, "CustomerChurn[TotalCharges]": 44.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1976-CFOCS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 46.0, "CustomerChurn[TotalCharges]": 46.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1024-GUALD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.8, "CustomerChurn[TotalCharges]": 24.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6358-LYNGM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.9, "CustomerChurn[TotalCharges]": 74.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0248-IPDFW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.1, "CustomerChurn[TotalCharges]": 50.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2740-TVLFN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.15, "CustomerChurn[TotalCharges]": 50.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2209-XADXF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.25, "CustomerChurn[TotalCharges]": 25.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0612-RTZZA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.25, "CustomerChurn[TotalCharges]": 25.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4729-XKASR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.75, "CustomerChurn[TotalCharges]": 24.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8473-VUVJN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.65, "CustomerChurn[TotalCharges]": 73.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5351-QESIO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.2, "CustomerChurn[TotalCharges]": 24.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3049-NDXFL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 85.8, "CustomerChurn[TotalCharges]": 85.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0970-ETWGE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.55, "CustomerChurn[TotalCharges]": 89.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7274-RTAPZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.55, "CustomerChurn[TotalCharges]": 90.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5960-WPXQM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.05, "CustomerChurn[TotalCharges]": 79.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4912-PIGUY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.6, "CustomerChurn[TotalCharges]": 84.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0295-PPHDO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.45, "CustomerChurn[TotalCharges]": 95.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7595-EUIVN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.8, "CustomerChurn[TotalCharges]": 75.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1866-OBPNR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 74.6, "CustomerChurn[TotalCharges]": 74.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3178-FESZO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 100.25, "CustomerChurn[TotalCharges]": 100.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3765-JXVKY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.7, "CustomerChurn[TotalCharges]": 74.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1628-BIZYP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 85.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1862-SKORY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 39.3, "CustomerChurn[TotalCharges]": 1637.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9633-DENPU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 47, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 58.6, "CustomerChurn[TotalCharges]": 2723.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5424-RLQLC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 59.65, "CustomerChurn[TotalCharges]": 638.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4827-USJHP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 51.8, "CustomerChurn[TotalCharges]": 1023.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1251-KRREG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 54.4, "CustomerChurn[TotalCharges]": 114.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4130-MZLCC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 50.55, "CustomerChurn[TotalCharges]": 244.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9342-VNIMQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 54.65, "CustomerChurn[TotalCharges]": 1665.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8919-FYFQZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 44, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 30.35, "CustomerChurn[TotalCharges]": 1359.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7389-KBFIT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 30.25, "CustomerChurn[TotalCharges]": 63.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5402-HTOTQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.3, "CustomerChurn[TotalCharges]": 875.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0975-VOOVL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 29.2, "CustomerChurn[TotalCharges]": 98.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9947-OTFQU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.4, "CustomerChurn[TotalCharges]": 1074.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3488-PGMQJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.5, "CustomerChurn[TotalCharges]": 606.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4143-HHPMK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.35, "CustomerChurn[TotalCharges]": 4338.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2135-DQWAQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 85.3, "CustomerChurn[TotalCharges]": 420.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7005-CCBKV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.4, "CustomerChurn[TotalCharges]": 556.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1472-TNCWL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 36, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.7, "CustomerChurn[TotalCharges]": 3512.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4884-ZTHVF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 87.1, "CustomerChurn[TotalCharges]": 713.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8413-VONUO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.65, "CustomerChurn[TotalCharges]": 167.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9614-RMGHA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 91.85, "CustomerChurn[TotalCharges]": 5940.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4828-FAZPK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 79.95, "CustomerChurn[TotalCharges]": 1267.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8988-ECPJR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 79.6, "CustomerChurn[TotalCharges]": 2718.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7074-IEVOJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.4, "CustomerChurn[TotalCharges]": 205.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5692-ICXLW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.7, "CustomerChurn[TotalCharges]": 2845.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6298-QDFNH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.35, "CustomerChurn[TotalCharges]": 1730.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1013-QCWAM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.8, "CustomerChurn[TotalCharges]": 6690.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1569-TTNYJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.75, "CustomerChurn[TotalCharges]": 412.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4951-UKAAQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 88.95, "CustomerChurn[TotalCharges]": 355.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9773-PEQBZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.85, "CustomerChurn[TotalCharges]": 797.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8374-XGEJJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.0, "CustomerChurn[TotalCharges]": 4388.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4228-ZGYUW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.05, "CustomerChurn[TotalCharges]": 368.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6892-EZDTG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 91.65, "CustomerChurn[TotalCharges]": 365.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0702-PGIBZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.7, "CustomerChurn[TotalCharges]": 364.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3621-CEOVK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.2, "CustomerChurn[TotalCharges]": 1369.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3016-KSVCP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 33.75, "CustomerChurn[TotalCharges]": 1009.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8160-HOWOX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 66.85, "CustomerChurn[TotalCharges]": 458.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2894-QOJRX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 34.0, "CustomerChurn[TotalCharges]": 853.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4640-UHDOS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.95, "CustomerChurn[TotalCharges]": 734.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0003-MKNFE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 59.9, "CustomerChurn[TotalCharges]": 542.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8903-XEBGX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.3, "CustomerChurn[TotalCharges]": 108.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9396-ZSFLL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 48.85, "CustomerChurn[TotalCharges]": 631.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1958-RNRKS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.9, "CustomerChurn[TotalCharges]": 1441.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5155-AZQPB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.9, "CustomerChurn[TotalCharges]": 1410.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7802-EFKNY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.95, "CustomerChurn[TotalCharges]": 100.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4236-UJPWO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.5, "CustomerChurn[TotalCharges]": 46.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2235-ZGKPT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.85, "CustomerChurn[TotalCharges]": 239.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8614-VGMMV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.1, "CustomerChurn[TotalCharges]": 679.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1559-DTODC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.15, "CustomerChurn[TotalCharges]": 468.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5215-LNLDJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.7, "CustomerChurn[TotalCharges]": 149.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4815-GBTCD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.15, "CustomerChurn[TotalCharges]": 99.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4690-LLKUA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.05, "CustomerChurn[TotalCharges]": 770.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3258-SANFR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 44.7, "CustomerChurn[TotalCharges]": 276.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3808-HFKDE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.35, "CustomerChurn[TotalCharges]": 927.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7521-AFHAB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.8, "CustomerChurn[TotalCharges]": 220.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4566-QVRRW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.05, "CustomerChurn[TotalCharges]": 483.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1501-SGHBW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.85, "CustomerChurn[TotalCharges]": 81.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1919-RTPQD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.75, "CustomerChurn[TotalCharges]": 333.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2842-JTCCU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 46.05, "CustomerChurn[TotalCharges]": 80.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0913-XWSCN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 85.5, "CustomerChurn[TotalCharges]": 4713.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3198-VELRD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 84.75, "CustomerChurn[TotalCharges]": 264.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3096-IZETN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 78.1, "CustomerChurn[TotalCharges]": 947.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7395-IGJOS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 81.5, "CustomerChurn[TotalCharges]": 1329.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2114-MGINA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 89.8, "CustomerChurn[TotalCharges]": 1129.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5380-AFSSK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 93.9, "CustomerChurn[TotalCharges]": 486.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9279-CJEOJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 95.4, "CustomerChurn[TotalCharges]": 2025.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9846-GKXAS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 90.8, "CustomerChurn[TotalCharges]": 809.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1845-CSBRZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 85.35, "CustomerChurn[TotalCharges]": 1961.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3194-ORPIK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 50, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 84.4, "CustomerChurn[TotalCharges]": 4116.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3855-ONCAR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 78.9, "CustomerChurn[TotalCharges]": 299.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8329-GWVPJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 50, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.75, "CustomerChurn[TotalCharges]": 3557.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0196-JTUQI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 75.2, "CustomerChurn[TotalCharges]": 633.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5931-FLJJF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.1, "CustomerChurn[TotalCharges]": 467.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5908-QMGOE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 74.2, "CustomerChurn[TotalCharges]": 1133.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6221-AVQYL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 73.25, "CustomerChurn[TotalCharges]": 131.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0599-XNYDO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.8, "CustomerChurn[TotalCharges]": 1540.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9800-ONTFE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.8, "CustomerChurn[TotalCharges]": 1615.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8993-IZEUX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.15, "CustomerChurn[TotalCharges]": 488.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8873-GLDMH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 73.85, "CustomerChurn[TotalCharges]": 401.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2079-FBMZK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.25, "CustomerChurn[TotalCharges]": 418.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9767-FFLEM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 38, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 69.5, "CustomerChurn[TotalCharges]": 2625.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4115-NZRKS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.15, "CustomerChurn[TotalCharges]": 574.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6311-UEUME", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.9, "CustomerChurn[TotalCharges]": 2384.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7198-GLXTC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 143.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3753-TSEMP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 88.15, "CustomerChurn[TotalCharges]": 1390.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4529-CKBCL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.2, "CustomerChurn[TotalCharges]": 146.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7928-VJYAB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.6, "CustomerChurn[TotalCharges]": 1020.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0187-QSXOE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.0, "CustomerChurn[TotalCharges]": 605.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6110-OHIHY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.25, "CustomerChurn[TotalCharges]": 267.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6331-EWIEB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.25, "CustomerChurn[TotalCharges]": 1734.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3951-NJCVI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 42, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.05, "CustomerChurn[TotalCharges]": 3944.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7851-WZEKY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.15, "CustomerChurn[TotalCharges]": 196.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7943-RQCHR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.75, "CustomerChurn[TotalCharges]": 889.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4094-NSEDU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.25, "CustomerChurn[TotalCharges]": 1973.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8245-UMPYT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 96.4, "CustomerChurn[TotalCharges]": 1581.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5150-ITWWB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.85, "CustomerChurn[TotalCharges]": 335.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3318-OSATS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.45, "CustomerChurn[TotalCharges]": 3474.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7526-BEZQB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 96.05, "CustomerChurn[TotalCharges]": 1148.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2824-MYYBN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.25, "CustomerChurn[TotalCharges]": 3314.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3714-NTNFO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.5, "CustomerChurn[TotalCharges]": 3906.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9606-PBKBQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 32, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 2642.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7892-QVYKW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.6, "CustomerChurn[TotalCharges]": 1868.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9779-DPNEJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.15, "CustomerChurn[TotalCharges]": 1790.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1143-NMNQJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.7, "CustomerChurn[TotalCharges]": 169.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6961-VCPMC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.4, "CustomerChurn[TotalCharges]": 3605.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8972-HJWNV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.55, "CustomerChurn[TotalCharges]": 646.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7858-GTZSP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.55, "CustomerChurn[TotalCharges]": 1066.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5228-EXCET", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.85, "CustomerChurn[TotalCharges]": 1008.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2642-DTVCO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.05, "CustomerChurn[TotalCharges]": 746.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9355-NPPFS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.8, "CustomerChurn[TotalCharges]": 2006.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9185-TQCVP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.15, "CustomerChurn[TotalCharges]": 1139.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1226-IENZN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.75, "CustomerChurn[TotalCharges]": 1218.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0928-XUTSN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.5, "CustomerChurn[TotalCharges]": 1011.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4846-WHAFZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.5, "CustomerChurn[TotalCharges]": 2868.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5956-VKDTT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.35, "CustomerChurn[TotalCharges]": 334.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1618-CFHME", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.9, "CustomerChurn[TotalCharges]": 143.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3030-YDNRM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.85, "CustomerChurn[TotalCharges]": 572.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3858-VOBET", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.95, "CustomerChurn[TotalCharges]": 1710.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7801-KICAO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.15, "CustomerChurn[TotalCharges]": 1345.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3199-XGZCY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.25, "CustomerChurn[TotalCharges]": 576.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7625-XCQRH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.5, "CustomerChurn[TotalCharges]": 837.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8541-QVFKM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.5, "CustomerChurn[TotalCharges]": 632.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4629-NRXKX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.4, "CustomerChurn[TotalCharges]": 147.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0455-XFASS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.55, "CustomerChurn[TotalCharges]": 200.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6017-PPLPX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.45, "CustomerChurn[TotalCharges]": 1470.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4919-MOAVT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.65, "CustomerChurn[TotalCharges]": 220.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4482-EWFMI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.7, "CustomerChurn[TotalCharges]": 135.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2482-CZGBB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 740.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0018-NYROU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 68.95, "CustomerChurn[TotalCharges]": 351.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3398-ZOUAA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.1, "CustomerChurn[TotalCharges]": 1474.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1010-DIAUQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 96.5, "CustomerChurn[TotalCharges]": 492.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0927-LCSMG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 74.65, "CustomerChurn[TotalCharges]": 544.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3916-NRPAP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 85.7, "CustomerChurn[TotalCharges]": 256.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7861-UVUFT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.3, "CustomerChurn[TotalCharges]": 1308.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1092-GANHU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.65, "CustomerChurn[TotalCharges]": 1313.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5159-YFPKQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.8, "CustomerChurn[TotalCharges]": 160.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2195-ZRVAX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 47, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.3, "CustomerChurn[TotalCharges]": 4045.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9747-DDZOS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 73.5, "CustomerChurn[TotalCharges]": 73.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8617-ENBDS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 73.6, "CustomerChurn[TotalCharges]": 232.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3647-GMGDH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 94.7, "CustomerChurn[TotalCharges]": 1914.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0129-KPTWJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 72, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.65, "CustomerChurn[TotalCharges]": 6747.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0943-ZQPXH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 44, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 92.95, "CustomerChurn[TotalCharges]": 4122.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3644-QXEHN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 97.0, "CustomerChurn[TotalCharges]": 1334.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3629-ZNKXA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.8, "CustomerChurn[TotalCharges]": 1752.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5480-TBGPH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 99.3, "CustomerChurn[TotalCharges]": 2431.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2952-QAYZF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.3, "CustomerChurn[TotalCharges]": 424.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2070-XYMFH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 79.35, "CustomerChurn[TotalCharges]": 1835.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9776-OJUZI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 95.45, "CustomerChurn[TotalCharges]": 6223.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3771-PZOBW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 90.7, "CustomerChurn[TotalCharges]": 1781.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2454-RPBRZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.1, "CustomerChurn[TotalCharges]": 1060.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6080-TCMYC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 81.2, "CustomerChurn[TotalCharges]": 3292.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6137-NICCO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 94.05, "CustomerChurn[TotalCharges]": 518.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4098-NAUKP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.65, "CustomerChurn[TotalCharges]": 5683.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0495-ZBNGW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 79.9, "CustomerChurn[TotalCharges]": 343.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0378-NHQXU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 88.25, "CustomerChurn[TotalCharges]": 1460.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4695-WJZUE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 88.55, "CustomerChurn[TotalCharges]": 179.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5982-FPVQN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.15, "CustomerChurn[TotalCharges]": 3532.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1273-MTETI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 88.85, "CustomerChurn[TotalCharges]": 372.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6075-SLNIL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 38, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 95.1, "CustomerChurn[TotalCharges]": 3691.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5947-SGKCL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 105.35, "CustomerChurn[TotalCharges]": 1559.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6481-ESCNL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 100.55, "CustomerChurn[TotalCharges]": 2878.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8059-UDZFY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 105.35, "CustomerChurn[TotalCharges]": 3465.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5299-SJCZT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 101.55, "CustomerChurn[TotalCharges]": 298.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2034-CGRHZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 102.95, "CustomerChurn[TotalCharges]": 2496.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0402-CQAJN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 101.9, "CustomerChurn[TotalCharges]": 3545.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5380-WJKOV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 106.35, "CustomerChurn[TotalCharges]": 3549.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8313-NDOIA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 104.15, "CustomerChurn[TotalCharges]": 2494.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7028-DVOIQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 99.05, "CustomerChurn[TotalCharges]": 3395.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1751-NCDLI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.85, "CustomerChurn[TotalCharges]": 4564.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4021-RQSNY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.5, "CustomerChurn[TotalCharges]": 3004.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0895-DQHEW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 54, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 104.3, "CustomerChurn[TotalCharges]": 5278.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4433-JCGCG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.0, "CustomerChurn[TotalCharges]": 4680.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8818-DOPVL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 104.45, "CustomerChurn[TotalCharges]": 4863.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9647-ERGBE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.05, "CustomerChurn[TotalCharges]": 3046.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4735-ASGMA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.35, "CustomerChurn[TotalCharges]": 2515.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7450-NWRTR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 99.45, "CustomerChurn[TotalCharges]": 1200.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4998-IKFSE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.45, "CustomerChurn[TotalCharges]": 3096.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2968-SSGAA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.6, "CustomerChurn[TotalCharges]": 1060.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3768-NLUBH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 57, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.6, "CustomerChurn[TotalCharges]": 5746.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2761-XECQW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 43.35, "CustomerChurn[TotalCharges]": 371.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1304-BCCFO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.05, "CustomerChurn[TotalCharges]": 564.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7595-EHCDL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 32, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 50.6, "CustomerChurn[TotalCharges]": 1653.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4945-RVMTE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 59.55, "CustomerChurn[TotalCharges]": 1646.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3995-WFCSM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 60.85, "CustomerChurn[TotalCharges]": 111.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2770-NSVDG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 29.1, "CustomerChurn[TotalCharges]": 688.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9026-RNUJS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.35, "CustomerChurn[TotalCharges]": 237.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9667-EQRXU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 40.3, "CustomerChurn[TotalCharges]": 1172.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6715-OFDBP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.05, "CustomerChurn[TotalCharges]": 346.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8280-MQRQN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.45, "CustomerChurn[TotalCharges]": 50.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8404-GFGCZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 65.6, "CustomerChurn[TotalCharges]": 250.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8878-RYUKI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 59.45, "CustomerChurn[TotalCharges]": 3043.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1208-NBVFH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.6, "CustomerChurn[TotalCharges]": 939.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8650-RHRKE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 29.65, "CustomerChurn[TotalCharges]": 118.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6876-ADESB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 48.95, "CustomerChurn[TotalCharges]": 48.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5091-HFAZW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 91.15, "CustomerChurn[TotalCharges]": 168.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8429-XIBUM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 101.35, "CustomerChurn[TotalCharges]": 2317.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3348-CFRNX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 92.35, "CustomerChurn[TotalCharges]": 2602.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0684-AOSIH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 95.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3466-RITXD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 92.4, "CustomerChurn[TotalCharges]": 2349.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5274-XHAKY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 41, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 94.3, "CustomerChurn[TotalCharges]": 3893.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3694-DELSO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 38.55, "CustomerChurn[TotalCharges]": 156.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3969-JQABI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 58, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 65.25, "CustomerChurn[TotalCharges]": 3791.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4931-TRZWN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.95, "CustomerChurn[TotalCharges]": 923.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0603-OLQDC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.85, "CustomerChurn[TotalCharges]": 837.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1530-ZTDOZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 40.65, "CustomerChurn[TotalCharges]": 2070.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0096-FCPUF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 64.5, "CustomerChurn[TotalCharges]": 1888.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3062-ICYZQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 93.8, "CustomerChurn[TotalCharges]": 4539.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1212-GLHMD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 86.05, "CustomerChurn[TotalCharges]": 244.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0541-FITGH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 62.15, "CustomerChurn[TotalCharges]": 113.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2921-XWDJH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 38, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 83.45, "CustomerChurn[TotalCharges]": 3147.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9780-FKVVF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 59.15, "CustomerChurn[TotalCharges]": 336.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8400-WZICQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.7, "CustomerChurn[TotalCharges]": 3131.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3656-TKRVZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.35, "CustomerChurn[TotalCharges]": 165.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3842-QTGDL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 80.75, "CustomerChurn[TotalCharges]": 1321.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0239-OXEXL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 84.25, "CustomerChurn[TotalCharges]": 3847.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7957-RYHQD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 79.2, "CustomerChurn[TotalCharges]": 3233.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7619-ODSGN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.75, "CustomerChurn[TotalCharges]": 1338.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3088-LHEFH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 929.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2669-QVCRG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 41, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 81.3, "CustomerChurn[TotalCharges]": 3190.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7853-OETYL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 29.05, "CustomerChurn[TotalCharges]": 129.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6497-TILVL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.7, "CustomerChurn[TotalCharges]": 350.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0388-EOPEX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.4, "CustomerChurn[TotalCharges]": 139.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0257-ZESQC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.2, "CustomerChurn[TotalCharges]": 1929.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9537-VHDTA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 51.2, "CustomerChurn[TotalCharges]": 51.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6360-SVNWV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 73.55, "CustomerChurn[TotalCharges]": 2094.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0187-WZNAB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 74.4, "CustomerChurn[TotalCharges]": 1972.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9552-TGUZV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 658.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8885-QSQBX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 49.55, "CustomerChurn[TotalCharges]": 49.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7312-XSBAT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.75, "CustomerChurn[TotalCharges]": 49.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4072-IPYLT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 36, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 51.05, "CustomerChurn[TotalCharges]": 1815.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9644-UMGQA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.15, "CustomerChurn[TotalCharges]": 295.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7520-HQWJU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 67.45, "CustomerChurn[TotalCharges]": 4508.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8111-BKVDS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 40.7, "CustomerChurn[TotalCharges]": 449.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8963-JLGJT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.9, "CustomerChurn[TotalCharges]": 157.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5236-XMZJY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 42, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 59.65, "CustomerChurn[TotalCharges]": 2536.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3703-TTEPD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 65.35, "CustomerChurn[TotalCharges]": 1424.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1697-NVVGY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 66.4, "CustomerChurn[TotalCharges]": 1286.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8221-EQDGL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 61.0, "CustomerChurn[TotalCharges]": 2130.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0215-BQKGS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 84.3, "CustomerChurn[TotalCharges]": 2438.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3419-SNJJD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 105.25, "CustomerChurn[TotalCharges]": 6786.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4248-QPAVC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 85.35, "CustomerChurn[TotalCharges]": 1463.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8868-GAGIO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 45, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 84.55, "CustomerChurn[TotalCharges]": 3713.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9170-CCKOU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 90.2, "CustomerChurn[TotalCharges]": 1454.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2455-USLMV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 84.75, "CustomerChurn[TotalCharges]": 2613.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7537-CBQUZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 109.4, "CustomerChurn[TotalCharges]": 7031.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0886-QGENL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.25, "CustomerChurn[TotalCharges]": 2754.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2519-ERQOJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.6, "CustomerChurn[TotalCharges]": 1803.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2782-JEEBU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 36.0, "CustomerChurn[TotalCharges]": 780.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0953-LGOVU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 35.5, "CustomerChurn[TotalCharges]": 432.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5311-IHLEI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 50.95, "CustomerChurn[TotalCharges]": 605.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1142-WACZW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 29.85, "CustomerChurn[TotalCharges]": 75.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5154-VEKBL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 58.5, "CustomerChurn[TotalCharges]": 539.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7734-DBOAI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 40.1, "CustomerChurn[TotalCharges]": 40.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9708-HPXWZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 45.4, "CustomerChurn[TotalCharges]": 214.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8350-NYMVI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 39, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 41.1, "CustomerChurn[TotalCharges]": 1597.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7395-XWZOY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 1165.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6211-WHMYA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 64, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 43.85, "CustomerChurn[TotalCharges]": 2751.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9774-NRNAU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 84.8, "CustomerChurn[TotalCharges]": 2309.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2155-AMQRX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 54.9, "CustomerChurn[TotalCharges]": 1505.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7459-IMVYU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 38, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.95, "CustomerChurn[TotalCharges]": 2657.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1492-QGCLU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 53, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.7, "CustomerChurn[TotalCharges]": 4616.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8548-AWOFC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 63.85, "CustomerChurn[TotalCharges]": 4264.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1810-MVMAI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 67.6, "CustomerChurn[TotalCharges]": 2000.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4489-SNOJF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 72.25, "CustomerChurn[TotalCharges]": 2568.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0228-MAUWC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 59.55, "CustomerChurn[TotalCharges]": 1144.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1541-ETJZO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 62.05, "CustomerChurn[TotalCharges]": 62.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0584-BJQGZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 78.35, "CustomerChurn[TotalCharges]": 1837.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5448-VWNAM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 75.9, "CustomerChurn[TotalCharges]": 1375.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4710-NKCAW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 64.4, "CustomerChurn[TotalCharges]": 316.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5898-IGSLP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.3, "CustomerChurn[TotalCharges]": 2823.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6234-PFPXL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 95.9, "CustomerChurn[TotalCharges]": 2234.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5325-UWTWJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 90.55, "CustomerChurn[TotalCharges]": 2929.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4724-WXVWF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 48, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.4, "CustomerChurn[TotalCharges]": 4445.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9445-ZUEQE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 85.2, "CustomerChurn[TotalCharges]": 2151.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0564-MUUQK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 95.5, "CustomerChurn[TotalCharges]": 1916.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5846-QFDFI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 88.6, "CustomerChurn[TotalCharges]": 2888.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2640-PMGFL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.5, "CustomerChurn[TotalCharges]": 2180.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3853-LYGAM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 95.65, "CustomerChurn[TotalCharges]": 1640.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1485-YDHMM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 93.25, "CustomerChurn[TotalCharges]": 4631.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2873-ZLIWT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.85, "CustomerChurn[TotalCharges]": 3303.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9500-LTVBP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 80.05, "CustomerChurn[TotalCharges]": 2835.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6745-JEFZB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 91.5, "CustomerChurn[TotalCharges]": 3236.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9508-ILZDG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 96.35, "CustomerChurn[TotalCharges]": 3190.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7892-POOKP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 104.8, "CustomerChurn[TotalCharges]": 3046.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5099-BAILX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 110.75, "CustomerChurn[TotalCharges]": 4687.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1450-GALXR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.5, "CustomerChurn[TotalCharges]": 1058.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0115-TFERT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 111.2, "CustomerChurn[TotalCharges]": 2317.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9168-INPSZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 44, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 104.15, "CustomerChurn[TotalCharges]": 4495.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1028-FFNJK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.5, "CustomerChurn[TotalCharges]": 2917.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5816-QVHRX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 100.3, "CustomerChurn[TotalCharges]": 3541.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4830-FAXFM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 24.1, "CustomerChurn[TotalCharges]": 439.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2565-JSLRY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.05, "CustomerChurn[TotalCharges]": 24.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9027-YFHQJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.05, "CustomerChurn[TotalCharges]": 152.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4430-YHXGG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.45, "CustomerChurn[TotalCharges]": 84.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5760-WRAHC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.75, "CustomerChurn[TotalCharges]": 1545.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7989-VCQOH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 83.25, "CustomerChurn[TotalCharges]": 1611.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1356-MKYSK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 78.65, "CustomerChurn[TotalCharges]": 483.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9137-UIYPG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 106.9, "CustomerChurn[TotalCharges]": 3756.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4134-BSXLX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 60.9, "CustomerChurn[TotalCharges]": 1785.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9714-EDSUC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 94.9, "CustomerChurn[TotalCharges]": 360.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1036-GUDCL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 79.05, "CustomerChurn[TotalCharges]": 4663.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5173-WXOQV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 64.2, "CustomerChurn[TotalCharges]": 143.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1074-AMIOH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 53, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 108.25, "CustomerChurn[TotalCharges]": 5935.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6214-EDAKZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.15, "CustomerChurn[TotalCharges]": 1206.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4183-WCSEP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.45, "CustomerChurn[TotalCharges]": 2435.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2227-JRSJX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 99.15, "CustomerChurn[TotalCharges]": 1956.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1346-PJWTK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 61, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 94.15, "CustomerChurn[TotalCharges]": 5731.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2344-JMOGN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 94.85, "CustomerChurn[TotalCharges]": 890.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7929-DMBCV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 81.0, "CustomerChurn[TotalCharges]": 1683.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6475-VHUIZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.25, "CustomerChurn[TotalCharges]": 1221.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6818-DJXAA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 91.1, "CustomerChurn[TotalCharges]": 964.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7036-ZZKBD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 66.4, "CustomerChurn[TotalCharges]": 2019.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8292-TYSPY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 1046.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6711-VTNRE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 36, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 87.55, "CustomerChurn[TotalCharges]": 3078.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3003-CMDUU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.15, "CustomerChurn[TotalCharges]": 2395.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0013-MHZWF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 69.4, "CustomerChurn[TotalCharges]": 571.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3221-CJMSG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 51.1, "CustomerChurn[TotalCharges]": 1269.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5780-INQIK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.4, "CustomerChurn[TotalCharges]": 408.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4429-WYGFR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 49.15, "CustomerChurn[TotalCharges]": 1237.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8679-JOEVF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 59.4, "CustomerChurn[TotalCharges]": 1023.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5949-EBSQK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 61.45, "CustomerChurn[TotalCharges]": 229.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3144-AUDBS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.15, "CustomerChurn[TotalCharges]": 270.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6034-YMTOB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 75.65, "CustomerChurn[TotalCharges]": 399.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2696-NARTR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.85, "CustomerChurn[TotalCharges]": 926.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7854-EKTJL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 19.6, "CustomerChurn[TotalCharges]": 35.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7531-GQHME", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.05, "CustomerChurn[TotalCharges]": 265.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0114-RSRRW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 19.95, "CustomerChurn[TotalCharges]": 187.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7266-GSSJX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 20.45, "CustomerChurn[TotalCharges]": 250.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0463-WZZKO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.75, "CustomerChurn[TotalCharges]": 67.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6648-INWPS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 20.15, "CustomerChurn[TotalCharges]": 341.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7874-ECPQJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 20.05, "CustomerChurn[TotalCharges]": 85.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0208-BPQEJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 19.4, "CustomerChurn[TotalCharges]": 198.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5260-UMPWX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.25, "CustomerChurn[TotalCharges]": 493.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3694-GLTJM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 19.65, "CustomerChurn[TotalCharges]": 92.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5712-VBOXD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.15, "CustomerChurn[TotalCharges]": 68.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8780-RSYYU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 19.2, "CustomerChurn[TotalCharges]": 532.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4020-KIUDI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 19.85, "CustomerChurn[TotalCharges]": 138.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2061-VVFST", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 19.5, "CustomerChurn[TotalCharges]": 805.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0516-QREYC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.3, "CustomerChurn[TotalCharges]": 459.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6942-LBFDP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.55, "CustomerChurn[TotalCharges]": 33.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8681-ICONS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.65, "CustomerChurn[TotalCharges]": 654.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1237-WIYYZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.55, "CustomerChurn[TotalCharges]": 389.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9867-NNXLC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.05, "CustomerChurn[TotalCharges]": 470.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0690-SRQID", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.65, "CustomerChurn[TotalCharges]": 67.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6131-IUNXN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.2, "CustomerChurn[TotalCharges]": 382.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5384-ZTTWP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.8, "CustomerChurn[TotalCharges]": 272.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5774-XZTQC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.45, "CustomerChurn[TotalCharges]": 150.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3156-QLHBO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.25, "CustomerChurn[TotalCharges]": 48.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6838-HVLXG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.3, "CustomerChurn[TotalCharges]": 246.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9467-ROOLM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.05, "CustomerChurn[TotalCharges]": 461.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6972-SNKKW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.0, "CustomerChurn[TotalCharges]": 109.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8410-BGQXN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.4, "CustomerChurn[TotalCharges]": 93.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4397-FRLTA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.15, "CustomerChurn[TotalCharges]": 84.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0816-TSPHQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.75, "CustomerChurn[TotalCharges]": 44.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4800-VHZKI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.9, "CustomerChurn[TotalCharges]": 19.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7989-CHGTL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.6, "CustomerChurn[TotalCharges]": 19.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7243-LCGGZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.9, "CustomerChurn[TotalCharges]": 20.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4897-QSUYC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.15, "CustomerChurn[TotalCharges]": 20.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9753-OYLBX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.5, "CustomerChurn[TotalCharges]": 20.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0670-KDOMA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.25, "CustomerChurn[TotalCharges]": 20.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9975-SKRNR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 18.9, "CustomerChurn[TotalCharges]": 18.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8073-IJDCM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.3, "CustomerChurn[TotalCharges]": 20.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2676-ISHSF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.3, "CustomerChurn[TotalCharges]": 20.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4760-XOHVN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.45, "CustomerChurn[TotalCharges]": 19.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3807-XHCJH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 20.0, "CustomerChurn[TotalCharges]": 20.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3577-AMVUX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.05, "CustomerChurn[TotalCharges]": 55.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1536-HBSWP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.9, "CustomerChurn[TotalCharges]": 49.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5440-FLBQG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 108.4, "CustomerChurn[TotalCharges]": 7318.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8631-NBHFZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 79.4, "CustomerChurn[TotalCharges]": 5154.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1725-IQNIY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 54, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 109.75, "CustomerChurn[TotalCharges]": 6110.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2533-QVMSK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 61, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.1, "CustomerChurn[TotalCharges]": 5638.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2225-ZRGSG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 93.9, "CustomerChurn[TotalCharges]": 6579.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7253-UVNDW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 54.35, "CustomerChurn[TotalCharges]": 2460.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9906-NHHVC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 53.5, "CustomerChurn[TotalCharges]": 3517.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2000-DHJUY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 92.2, "CustomerChurn[TotalCharges]": 6474.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4176-RELJR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.1, "CustomerChurn[TotalCharges]": 1672.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4199-QHJNM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 102.9, "CustomerChurn[TotalCharges]": 6989.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1635-NZATJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.45, "CustomerChurn[TotalCharges]": 1789.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4698-KVLLG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 19.6, "CustomerChurn[TotalCharges]": 967.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9000-PLFUZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 49.45, "CustomerChurn[TotalCharges]": 2907.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0343-QLUZP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 39.6, "CustomerChurn[TotalCharges]": 2424.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5110-CHOPY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 53.6, "CustomerChurn[TotalCharges]": 3237.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7816-VGHTO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 40.55, "CustomerChurn[TotalCharges]": 217.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1459-QNFQT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 59.5, "CustomerChurn[TotalCharges]": 4144.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1371-DWPAZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 0, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 56.05, "CustomerChurn[TotalCharges]": null, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0562-KBDVM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 44.6, "CustomerChurn[TotalCharges]": 3058.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4872-JCVCA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 47.6, "CustomerChurn[TotalCharges]": 3377.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5317-FLPJF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 61.35, "CustomerChurn[TotalCharges]": 4193.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9867-XOBQA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 53.15, "CustomerChurn[TotalCharges]": 1183.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1271-UODNO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 39, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 53.85, "CustomerChurn[TotalCharges]": 2200.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0263-FJTQO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 50, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 70.5, "CustomerChurn[TotalCharges]": 3486.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2676-SSLTO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 66.15, "CustomerChurn[TotalCharges]": 3199.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6586-MYGKD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 76.95, "CustomerChurn[TotalCharges]": 5289.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6898-RBTLU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 79.3, "CustomerChurn[TotalCharges]": 3902.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7014-ZZXAW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 24.25, "CustomerChurn[TotalCharges]": 1732.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3088-FVYWK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 53, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.55, "CustomerChurn[TotalCharges]": 1336.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3261-CQXOL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.45, "CustomerChurn[TotalCharges]": 1813.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9108-EQPNQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 26.1, "CustomerChurn[TotalCharges]": 225.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9337-SRRNI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.3, "CustomerChurn[TotalCharges]": 1673.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5356-KZCKT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 58, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 24.45, "CustomerChurn[TotalCharges]": 1513.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5622-UEJFI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.4, "CustomerChurn[TotalCharges]": 949.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2481-SBOYW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 61, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 1498.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9648-BCHKM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 24.65, "CustomerChurn[TotalCharges]": 471.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2169-RRLFW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.6, "CustomerChurn[TotalCharges]": 1888.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4534-WGCIR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 58, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.15, "CustomerChurn[TotalCharges]": 1509.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2511-ALLCS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 24.3, "CustomerChurn[TotalCharges]": 821.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0323-XWWTN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 26.4, "CustomerChurn[TotalCharges]": 121.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8219-VYBVI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 39, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 1004.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6199-IPCAO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 26.1, "CustomerChurn[TotalCharges]": 692.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8626-XHBIE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.8, "CustomerChurn[TotalCharges]": 1424.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2263-SFSQZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.95, "CustomerChurn[TotalCharges]": 1222.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2954-PIBKO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 64.15, "CustomerChurn[TotalCharges]": 4254.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3200-MNQTF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 70.9, "CustomerChurn[TotalCharges]": 4677.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3948-KXDUF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 68.75, "CustomerChurn[TotalCharges]": 4447.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7691-XVTZH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 89.95, "CustomerChurn[TotalCharges]": 5974.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6900-RBKER", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 89.45, "CustomerChurn[TotalCharges]": 4577.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6741-QRLUP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 80.3, "CustomerChurn[TotalCharges]": 4995.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5855-EIBDE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 106.65, "CustomerChurn[TotalCharges]": 5174.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0678-RLHVP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 53, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 105.55, "CustomerChurn[TotalCharges]": 5682.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6754-LZUKA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 61, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 80.9, "CustomerChurn[TotalCharges]": 4932.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3197-NNYNB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 105.1, "CustomerChurn[TotalCharges]": 6631.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7233-PAHHL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 84.0, "CustomerChurn[TotalCharges]": 5714.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6901-GOGZG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.95, "CustomerChurn[TotalCharges]": 4984.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0960-HUWBM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 104.1, "CustomerChurn[TotalCharges]": 6700.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6733-LRIZX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 108.95, "CustomerChurn[TotalCharges]": 4025.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8060-HIWJJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 64, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 86.55, "CustomerChurn[TotalCharges]": 5632.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3612-YUNGG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 64, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 109.2, "CustomerChurn[TotalCharges]": 6741.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2990-OGYTD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 86.15, "CustomerChurn[TotalCharges]": 5883.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3870-SPZSI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 113.05, "CustomerChurn[TotalCharges]": 7869.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0839-JTCUD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 89.9, "CustomerChurn[TotalCharges]": 5958.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4674-HGNUA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 89.9, "CustomerChurn[TotalCharges]": 6457.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9224-VTYID", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 47, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 90.5, "CustomerChurn[TotalCharges]": 4318.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8690-ZVLCL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 88.0, "CustomerChurn[TotalCharges]": 6161.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3508-VLHCZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 90.55, "CustomerChurn[TotalCharges]": 6239.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1741-WTPON", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 115.85, "CustomerChurn[TotalCharges]": 6567.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1023-BQXZE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 57, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 74.35, "CustomerChurn[TotalCharges]": 4317.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1303-SRDOK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 69.05, "CustomerChurn[TotalCharges]": 3842.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3397-AVTKU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 60.0, "CustomerChurn[TotalCharges]": 2548.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7954-MLBUN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 99.45, "CustomerChurn[TotalCharges]": 3109.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9432-RUVSL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 48, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 102.5, "CustomerChurn[TotalCharges]": 4904.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0320-DWVTU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 53, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 99.5, "CustomerChurn[TotalCharges]": 5424.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5090-EMGTC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 100.05, "CustomerChurn[TotalCharges]": 6034.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3410-YOQBQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 79.2, "CustomerChurn[TotalCharges]": 2497.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4115-BNPJY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 75.55, "CustomerChurn[TotalCharges]": 2054.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3174-AKMAS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 64.2, "CustomerChurn[TotalCharges]": 3009.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1431-AIDJQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 82.1, "CustomerChurn[TotalCharges]": 2603.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9073-ZZIAY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.1, "CustomerChurn[TotalCharges]": 5215.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8999-YPYBV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 45, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 84.35, "CustomerChurn[TotalCharges]": 3858.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6997-UVGOX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 85.45, "CustomerChurn[TotalCharges]": 6029.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5485-ITNPC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 85.9, "CustomerChurn[TotalCharges]": 5595.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5680-LQOGP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 82.45, "CustomerChurn[TotalCharges]": 5646.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8229-BUJHX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 20.5, "CustomerChurn[TotalCharges]": 1500.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1955-IBMMB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 20.2, "CustomerChurn[TotalCharges]": 1192.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7673-BQGKU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 20.15, "CustomerChurn[TotalCharges]": 1337.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2888-ADFAO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 47, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 21.3, "CustomerChurn[TotalCharges]": 1041.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6828-HMKWP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 21.05, "CustomerChurn[TotalCharges]": 262.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3308-DGHKL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 19.3, "CustomerChurn[TotalCharges]": 1447.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6685-XSHHU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 20.95, "CustomerChurn[TotalCharges]": 1270.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7242-EDTYC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 44, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 19.55, "CustomerChurn[TotalCharges]": 819.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0374-FIUCA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.4, "CustomerChurn[TotalCharges]": 1414.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1764-VUUMT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 19.95, "CustomerChurn[TotalCharges]": 1269.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6621-NRZAK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.0, "CustomerChurn[TotalCharges]": 1209.25, "CustomerChurn[Churn]": false}], "stage_runningstate": "executed"}, {"_id": "64df5f91fc34b1031a5951cc", "mode": "staged", "originalfile": "/FileStore/platform/extra/tempFile1692360590.csv", "in": ["64df5f91fc34b1031a5951cb"], "out": [], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "TelcoChurn_PBI_AutoML", "comment": "", "pipeline_id": "64df5f91fc34b1031a5951c7", "sub_type": "Automl", "stage_type": "ml", "mlCategory": "Classification", "stage_attributes": {"model_type": "classification", "label": "CustomerChurn[Churn]", "optimizeBy": "accuracy", "features": ["CustomerChurn[SeniorCitizen]", "CustomerChurn[Partner]", "CustomerChurn[Dependents]", "CustomerChurn[tenure]", "CustomerChurn[PhoneService]", "CustomerChurn[PaperlessBilling]", "CustomerChurn[MonthlyCharges]", "CustomerChurn[TotalCharges]", "CustomerChurn[customerID]_stringindexer", "CustomerChurn[gender]_stringindexer", "CustomerChurn[MultipleLines]_stringindexer", "CustomerChurn[InternetService]_stringindexer", "CustomerChurn[OnlineSecurity]_stringindexer", "CustomerChurn[OnlineBackup]_stringindexer", "CustomerChurn[DeviceProtection]_stringindexer", "CustomerChurn[TechSupport]_stringindexer", "CustomerChurn[StreamingTV]_stringindexer", "CustomerChurn[StreamingMovies]_stringindexer", "CustomerChurn[Contract]_stringindexer", "CustomerChurn[PaymentMethod]_stringindexer"], "percentage": "100", "executionTime": "10", "sampling_value": "", "paascall": 1, "run_id": "", "sampling": 0}, "status": "new", "position": {"x": 187, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/ml-engine/classification.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "aml", "text": "Classification-AutoML", "slug": "auto-ml", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"model_type": "", "label": "", "features": []}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "15431221-f3af-496e-83cd-2ef74ecb4fcc", "original_schema": [{"inherited": true, "checked": true, "field": "CustomerChurn[SeniorCitizen]", "alias": "CustomerChurn[SeniorCitizen]", "type": "numeric", "position": 0}, {"inherited": true, "checked": true, "field": "CustomerChurn[Partner]", "alias": "CustomerChurn[Partner]", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "CustomerChurn[Dependents]", "alias": "CustomerChurn[Dependents]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "CustomerChurn[tenure]", "alias": "CustomerChurn[tenure]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "CustomerChurn[PhoneService]", "alias": "CustomerChurn[PhoneService]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaperlessBilling]", "alias": "CustomerChurn[PaperlessBilling]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "CustomerChurn[MonthlyCharges]", "alias": "CustomerChurn[MonthlyCharges]", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "CustomerChurn[TotalCharges]", "alias": "CustomerChurn[TotalCharges]", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "CustomerChurn[Churn]", "alias": "CustomerChurn[Churn]", "type": "numeric", "position": 8}, {"inherited": true, "checked": true, "field": "CustomerChurn[customerID]_stringindexer", "alias": "CustomerChurn[customerID]_stringindexer", "type": "real", "position": 9}, {"inherited": true, "checked": true, "field": "CustomerChurn[gender]_stringindexer", "alias": "CustomerChurn[gender]_stringindexer", "type": "numeric", "position": 10}, {"inherited": true, "checked": true, "field": "CustomerChurn[MultipleLines]_stringindexer", "alias": "CustomerChurn[MultipleLines]_stringindexer", "type": "numeric", "position": 11}, {"inherited": true, "checked": true, "field": "CustomerChurn[InternetService]_stringindexer", "alias": "CustomerChurn[InternetService]_stringindexer", "type": "numeric", "position": 12}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineSecurity]_stringindexer", "alias": "CustomerChurn[OnlineSecurity]_stringindexer", "type": "numeric", "position": 13}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineBackup]_stringindexer", "alias": "CustomerChurn[OnlineBackup]_stringindexer", "type": "numeric", "position": 14}, {"inherited": true, "checked": true, "field": "CustomerChurn[DeviceProtection]_stringindexer", "alias": "CustomerChurn[DeviceProtection]_stringindexer", "type": "numeric", "position": 15}, {"inherited": true, "checked": true, "field": "CustomerChurn[TechSupport]_stringindexer", "alias": "CustomerChurn[TechSupport]_stringindexer", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingTV]_stringindexer", "alias": "CustomerChurn[StreamingTV]_stringindexer", "type": "numeric", "position": 17}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingMovies]_stringindexer", "alias": "CustomerChurn[StreamingMovies]_stringindexer", "type": "numeric", "position": 18}, {"inherited": true, "checked": true, "field": "CustomerChurn[Contract]_stringindexer", "alias": "CustomerChurn[Contract]_stringindexer", "type": "numeric", "position": 19}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaymentMethod]_stringindexer", "alias": "CustomerChurn[PaymentMethod]_stringindexer", "type": "numeric", "position": 20}], "actual_schema": [{"inherited": true, "checked": true, "field": "CustomerChurn[customerID]", "alias": "CustomerChurn[customerID]", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "CustomerChurn[gender]", "alias": "CustomerChurn[gender]", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "CustomerChurn[SeniorCitizen]", "alias": "CustomerChurn[SeniorCitizen]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "CustomerChurn[Partner]", "alias": "CustomerChurn[Partner]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "CustomerChurn[Dependents]", "alias": "CustomerChurn[Dependents]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "CustomerChurn[tenure]", "alias": "CustomerChurn[tenure]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "CustomerChurn[PhoneService]", "alias": "CustomerChurn[PhoneService]", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "CustomerChurn[MultipleLines]", "alias": "CustomerChurn[MultipleLines]", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "CustomerChurn[InternetService]", "alias": "CustomerChurn[InternetService]", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineSecurity]", "alias": "CustomerChurn[OnlineSecurity]", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineBackup]", "alias": "CustomerChurn[OnlineBackup]", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "CustomerChurn[DeviceProtection]", "alias": "CustomerChurn[DeviceProtection]", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "CustomerChurn[TechSupport]", "alias": "CustomerChurn[TechSupport]", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingTV]", "alias": "CustomerChurn[StreamingTV]", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingMovies]", "alias": "CustomerChurn[StreamingMovies]", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "CustomerChurn[Contract]", "alias": "CustomerChurn[Contract]", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaperlessBilling]", "alias": "CustomerChurn[PaperlessBilling]", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaymentMethod]", "alias": "CustomerChurn[PaymentMethod]", "type": "String", "position": 17}, {"inherited": true, "checked": true, "field": "CustomerChurn[MonthlyCharges]", "alias": "CustomerChurn[MonthlyCharges]", "type": "real", "position": 18}, {"inherited": true, "checked": true, "field": "CustomerChurn[TotalCharges]", "alias": "CustomerChurn[TotalCharges]", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "CustomerChurn[Churn]", "alias": "CustomerChurn[Churn]", "type": "numeric", "position": 20}], "selected_schema": [], "created_at": "2023-08-18 12:09:53.044000", "originalcount": 7043, "samplecount": 500, "samplefile": "/FileStore/platform/sampleData/64df5f91fc34b1031a5951ca/part-00000-0db51ac6-a35f-48ab-b08d-924c6a6e96b6-c000.csv", "joinSchema": [], "updated_at": "2023-08-18 12:09:53.050000", "__v": 0, "stage_runningstate": "executed", "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": ""}}]